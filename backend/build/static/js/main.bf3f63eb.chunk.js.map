{"version":3,"sources":["components/Results/Results.module.css","components/Environment/EnvironmentList/EnvironmentList.module.css","containers/Loader/Loader.module.css","components/Results/ResultDetail/ResultDetail.module.css","Layout/Layout.module.css","containers/mainpage/Logo/Logo.module.css","containers/mainpage/adminPage/adminPage.module.css","containers/mainpage/diplomPage/diplomPage.module.css","containers/mainpage/otherPage/otherPage.module.css","containers/Navbar/Navbar.module.css","components/Webcam/Webcam.module.css","components/Environment/Environment.module.css","Layout/Layout.js","containers/mainpage/Logo/Logo.js","components/SignIn/SignIn.jsx","store/creators/creators.js","store/actions/actions.js","containers/mainpage/adminPage/adminPage.js","containers/mainpage/diplomPage/diplomPage.js","containers/mainpage/otherPage/otherPage.js","containers/mainpage/mainpage.js","containers/Navbar/Navbar.js","components/SignUp/SignUp.jsx","components/StatusButtons/StatusButtons.js","components/Field/Field.js","components/UserList/FoundUser/FoundUser.jsx","components/UserList/UserList.jsx","components/Documentation/Documentation.js","containers/Loader/Loader.js","components/Results/Results.js","components/Results/ResultDetail/ResultDetail.js","components/Keyboard/Keyboard.js","components/Experiment/Experiment.js","components/Types/CurrentType/CurrentType.jsx","components/Types/Types.jsx","components/Webcam/Webcam.js","components/Environment/EnvironmentList/EnvironmentList.js","components/Environment/Environment.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/fieldReducer.js","store/reducers/expReducer.js","store/reducers/RootReducer.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","Logo","src","alt","Cookies","require","SignIn","refreshUsernameField","e","setState","username","target","value","refreshPasswordField","password","signIn","a","fetch","method","headers","body","JSON","stringify","state","resp","json","res","user","cookie","_id","category","surname","name","gender","dob","hand","group","year","set","handler","alert","logged_in","onChange","placeholder","type","onClick","connect","store","token","dispatch","authSuccess","AUTHSUCCESS","AdminPage","to","diplomPage","OtherPage","Mainpage","get","Navbar","logout","remove","moment","SignUp","changeValue","generatePassword","generatedPassword","Math","floor","random","signUp","active","sending","succeeded","created","failed","resetForm","format","StatusButtons","class","wall","btnClass","cellStatus","food","fakeFood","entry","exit","pedal","Field","prevValue","document","onkeydown","x","key","match","exec","newValue","action","id","translate","innerText","currentState","fieldName","saveField","nameStatus","saveStatus","length","field","constructor","response","result","console","log","answer","busyName","map","element","i","line","component","index","change","ADDVALUE","changedValue","CHANGEVALUE","FoundUser","delete","loading","succeed","switchStatus","saved","editMode","edit","save","confirmation","objectRenameKeys","UserList","componentDidMount","searchAll","exportToExcel","changesMap","newArray","__v","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","data","Blob","FileSaver","error","changeType","search","changeQuery","query","reset","authorized","Documentation","rowSpan","colSpan","Loader","center","Results","onSort","sortField","cloneData","sortType","sort","orderedData","lodash","orderBy","onSaveTxt","results","item","push","date","time","expName","expNumber","animalName","expType","numberOfReinforcements","elemFile","env","diff","timeLine","moves","forEach","elem","Object","keys","values","newFile","blob","saveAs","onSaveAll","onDelete","option","row","find","Header","logo","LayoutRes","selector","topInput","button","resTableDiv","resTable","resTableHead","resDate","bind","resType","resUser","resName","resNumber","resAnimal","style","width","marginLeft","margin","Option","resResultBox","resResult","resOptionBox","history","withRouter","ResultDetail","params","details","back","cellSpacing","border","textAlign","timeAndDo","Keyboard","click","initialState","expAnimal","timer","changeStatus","startPosition","moveStatus","expBegin","description","clickCounter","feeding","Experiment","fullField","changeHand","newExpNumber","newExpAnimal","newComp","startPos","cellStatusExp","startExp","keyButton","keyboard","intervalId","setInterval","clickCount","singleClick","doubleClick","code","preventDefault","moveUp","expStatus","moveDown","moveRight","moveLeft","singleClickTimer","setTimeout","clearTimeout","deleteAction","finishExp","clearInterval","saveExperiment","expField","redirectNewExp","newExpName","setType","options","selectedIndex","getAttribute","mouseClickCount","clickAction","singleValue","doubleValue","firstElementChild","lastElementChild","nextElementSibling","previousElementSibling","singleMouseClickTimer","mouseAction","endExp","start","CHANGECOMP","NEWVALUE","STARTPOS","envName","expFeeding","saveExp","KEYBOARDACTION","MOUSEACTION","CurrentType","changeName","toUpperCase","changeDescription","maxLength","Types","fetchTypes","Video","Webcam","videoConstraints","facingMode","EnvironmentList","title","menu","onStartEx","Environment","archive","App","path","render","exact","Boolean","window","location","hostname","combineReducers","auth","newField","comp","newExpField","newLine","stateField","prevIndex","newIndex","currentSec","expUpField","prevMovesUp","walls","newIndexArray","split","letter","splice","prevIndexNum","Number","join","newIndexNum","indexOf","obj","prevIndexDown","newIndexDown","expDownField","prevMovesDown","wallsDown","prevLetRight","newLetRight","expRightField","prevMovesRight","wallsRight","prevLetter","newLet","String","fromCharCode","charCodeAt","number","prevLetLeft","newLetLeft","expLeftField","prevMovesLeft","wallsLeft","expKeyField","prevMovesKey","expDeleteKeyField","prevMovesDelete","pop","expMouseField","prevMovesMouse","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","app","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf3f63eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Results_Header__1EQKs\",\"LayoutRes\":\"Results_LayoutRes__3GPoC\",\"Option\":\"Results_Option__2LBMr\",\"resOptionBox\":\"Results_resOptionBox__1FFjT\",\"selector\":\"Results_selector__3WrDp\",\"resTableDiv\":\"Results_resTableDiv__2R94y\",\"topInput\":\"Results_topInput__3-ZwC\",\"resTable\":\"Results_resTable__1L5Ac\",\"resTableHead\":\"Results_resTableHead__1KKO0\",\"resTd\":\"Results_resTd__OLbK_\",\"button\":\"Results_button__387j7\",\"logo\":\"Results_logo__jJA2m\",\"resResultBox\":\"Results_resResultBox__3j2S6\",\"resResult\":\"Results_resResult__w1dYR\",\"resDate\":\"Results_resDate__1VZp7\",\"resType\":\"Results_resType__2rX2S\",\"resUser\":\"Results_resUser__1rnsa\",\"resName\":\"Results_resName__2kKoz\",\"resNumber\":\"Results_resNumber__38I5e\",\"resAnimal\":\"Results_resAnimal__PvvZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EnvironmentList\":\"EnvironmentList_EnvironmentList__3Lh_W\",\"title\":\"EnvironmentList_title__w3g48\",\"menu\":\"EnvironmentList_menu__3ZgtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__9XL3c\",\"lds-ripple\":\"Loader_lds-ripple__312YZ\",\"center\":\"Loader_center__3H1eH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultDetail\":\"ResultDetail_ResultDetail__26YqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1nXEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__32sKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminPage\":\"adminPage_AdminPage__2ecCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diplomPage\":\"diplomPage_diplomPage__20_ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OtherPage\":\"otherPage_OtherPage__2G21M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__37e2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Webcam\":\"Webcam_Webcam__2ppw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Environment\":\"Environment_Environment__w0rIp\"};","import React, {Component} from 'react';\nimport classes from './Layout.module.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Layout extends Component {\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <main>{this.props.children}</main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React, {Component} from 'react';\nimport classes from './Logo.module.css';\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className={classes.Logo}>\n        <img src=\"/img/logo.png\" alt=\"\"/>\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {AUTHSUCCESS} from '../../store/creators/creators';\nimport './SignIn.css';\nimport Logo from '../../containers/mainpage/Logo/Logo';\nconst Cookies = require('js-cookie');\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      logged_in: null,\n    }\n  };\n\n  refreshUsernameField = (e) => {\n    this.setState({username: e.target.value})\n  };\n\n  refreshPasswordField = (e) => {\n    this.setState({password: e.target.value})\n  };\n\n  signIn = async() => {\n    let resp = await fetch('/users/signin', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({...this.state})\n    });\n\n    const res = await resp.json();\n    if (res.user && res.cookie) {\n      const {_id, username, category, surname, name, gender, dob, hand, group, year} = res.user;\n\n      Cookies.set('user_id', _id);\n      Cookies.set('username', username);\n      Cookies.set('category', category);\n      Cookies.set('surname', surname);\n      Cookies.set('name', name);\n      Cookies.set('gender', gender);\n      Cookies.set('dob', dob);\n      Cookies.set('hand', hand);\n      Cookies.set('group', group);\n      Cookies.set('year', year);\n\n      this.props.handler();\n    } else {\n      alert('Try again') /// !!!\n    }\n  };\n\n  render() {\n    return (\n      <div className={'logContainer'}>\n        <Logo/>\n        <h2>Behavior tracking</h2>\n        <h1 className={'logTitle'}>Вход в систему</h1>\n        <br/>\n        <div>\n          <input className={'logInput'} onChange={this.refreshUsernameField} placeholder=\"Идентификатор пользователя\"/>\n        </div>\n        <br/>\n        <div>\n          <input className={'logInput'} onChange={this.refreshPasswordField} placeholder=\"Пароль\" type=\"password\"/>\n        </div>\n        {this.state.logged_in === false ? <div>Проверьте логин и пароль</div> : <div/>}\n        <br/>\n        <div className={'logButton'} onClick={this.signIn}>Войти</div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    token: store.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authSuccess: (token) => {\n      dispatch(AUTHSUCCESS(token))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import {\n  FULL_FIELD,\n  ADD_VALUE,\n  CHANGE_VALUE,\n  EXP_FIELD,\n  CHANGE_COMP,\n  NEW_VALUE,\n  START_POS,\n  AUTH_SUCCESS,\n  AUTH_LOGOUT,\n  MOVE_UP,\n  MOVE_DOWN,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  SAVE_EXP,\n  KEYBOARD_ACTION, DELETE_ACTION, MOUSE_ACTION,\n} from '../actions/actions';\n\n\nexport const FULLFIELD = (field) => {         // отрисовка пустого поля в конструкторе\n  return {\n    type: FULL_FIELD,\n    field,\n  };\n};\n\nexport const ADDVALUE = (index, change) => {        //\n  return {\n    type: ADD_VALUE,\n    index,\n    change,\n  };\n};\n\nexport const CHANGEVALUE = (index, changedValue) => {\n  return {\n    type: CHANGE_VALUE,\n    index,\n    changedValue,\n  };\n};\n\nexport const EXPFIELD = (field) => {\n  return {\n    type: EXP_FIELD,\n    field,\n  };\n};\n\nexport const CHANGECOMP = (index, newComp) => {\n  return {\n    type: CHANGE_COMP,\n    index,\n    newComp\n  }\n};\n\nexport const NEWVALUE = (index, newValue) => {\n  return {\n    type: NEW_VALUE,\n    index,\n    newValue\n  };\n};\n\nexport const STARTPOS = (index) => {\n  return {\n    type: START_POS,\n    index\n  }\n};\n\nexport const MOVEUP = (time) => {\n  return {\n    type: MOVE_UP,\n    time\n  }\n};\n\nexport const MOVEDOWN = (time) => {\n  return {\n    type: MOVE_DOWN,\n    time\n  }\n};\n\nexport const MOVELEFT = (time) => {\n  return {\n    type: MOVE_LEFT,\n    time\n  }\n};\n\nexport const MOVERIGHT = (time) => {\n  return {\n    type: MOVE_RIGHT,\n    time\n  }\n};\n\nexport const KEYBOARDACTION = (value, time) => {\n  return {\n    type: KEYBOARD_ACTION,\n    value,\n    time\n  }\n};\n\nexport const DELETEACTION = () => {\n  return {\n    type: DELETE_ACTION\n  }\n};\n\nexport const MOUSEACTION = (value, time) => {\n  return {\n    type: MOUSE_ACTION,\n    value,\n    time\n  }\n};\n\nexport const fetchField = () => {\n  return async (dispatch) => {\n    const response = await fetch('/index/getField');\n    const result = await response.json();\n    dispatch(FULLFIELD(result));\n  };\n};\n\nexport const expField = (id) => {\n  return async (dispatch) => {\n    const response = await fetch(\n        '/index/getExpField',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id\n          }),\n        }\n    );\n    const result = await response.json();\n    dispatch(EXPFIELD(result));\n  };\n};\n\nexport const saveExp = (id, expName, moves, envName, expNumber, expAnimal, expType, expFeeding) => {\n  return async () => {\n    const response = await fetch(\n        '/index/saveExp',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id,\n            expName,\n            moves,\n            envName,\n            expNumber,\n            expAnimal,\n            expType,\n            expFeeding\n          }),\n        }\n    );\n  }\n};\n\nexport const AUTHSUCCESS = (token) => {\n  return {\n    type: AUTH_SUCCESS,\n    token,\n  };\n};\n","const FULL_FIELD = 'FULL_FIELD';\nconst ADD_VALUE = 'ADD_VALUE';\nconst CHANGE_VALUE = 'CHANGE_VALUE';\nconst EXP_FIELD = 'EXP_FIELD';\nconst CHANGE_COMP = 'CHANGE_COMP';\nconst NEW_VALUE = 'NEW_VALUE';\nconst START_POS = 'START_POS';\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\nconst AUTH_LOGOUT = 'AUTH_LOGOUT';\nconst MOVE_UP = 'MOVE_UP';\nconst MOVE_DOWN = 'MOVE_DOWN';\nconst MOVE_RIGHT = 'MOVE_RIGHT';\nconst MOVE_LEFT = 'MOVE_LEFT';\nconst SAVE_EXP = 'SAVE_EXP';\nconst NEW_EXP = 'NEW_EXP';\nconst KEYBOARD_ACTION = 'KEYBOARD_ACTION';\nconst DELETE_ACTION = 'DELETE_ACTION';\nconst MOUSE_ACTION = 'MOUSE_ACTION';\nconst END_EXP = 'END_EXP';\nexport {\n  FULL_FIELD,\n  ADD_VALUE,\n  CHANGE_VALUE,\n  EXP_FIELD,\n  CHANGE_COMP,\n  NEW_VALUE,\n  START_POS,\n  AUTH_SUCCESS,\n  AUTH_LOGOUT,\n  MOVE_UP,\n  MOVE_DOWN,\n  MOVE_RIGHT,\n  MOVE_LEFT,\n  SAVE_EXP,\n  NEW_EXP,\n  KEYBOARD_ACTION,\n  DELETE_ACTION,\n  MOUSE_ACTION,\n  END_EXP\n};\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport classes from './adminPage.module.css';\n\nclass AdminPage extends Component {\n  render() {\n    return (\n      <div className={classes.AdminPage}>\n        <Link to={'/registration'}>Регистрация</Link>\n        <Link to={'/users'}>Список пользователей</Link>\n      </div>\n    );\n  }\n}\n\nexport default AdminPage;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport classes from './diplomPage.module.css';\n\nclass diplomPage extends Component {\n  render() {\n    return (\n      <div className={classes.diplomPage}>\n        <Link to={'/constructor'}>Конструктор</Link>\n      </div>\n    );\n  }\n}\n\nexport default diplomPage;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport classes from './otherPage.module.css';\n\nclass OtherPage extends Component {\n  render() {\n    return (\n      <div className={classes.OtherPage}>\n        <Link to={'/environment'}>Архив сред</Link>\n        <Link to={'/results'}>Архив экспериментов</Link>\n        <Link to={'/types'}>Типы экспериментов</Link>\n        <Link to={'/readme'}>Документация</Link>\n      </div>\n    );\n  }\n}\n\nexport default OtherPage;","import React, {\n  Component,\n} from 'react';\nimport Logo from './Logo/Logo';\nimport AdminPage from './adminPage/adminPage';\nimport DiplomPage from './diplomPage/diplomPage';\nimport OtherPage from './otherPage/otherPage';\nimport Cookies from 'js-cookie';\n\nclass Mainpage extends Component {\n  render() {\n    return (Cookies.get('category') === 'Преподаватель') ? (\n      <div>\n        <Logo/>\n        <OtherPage/>\n        <DiplomPage/>\n        <AdminPage/>\n      </div>\n    ) : (Cookies.get('category') === 'Дипломник') ? (< div>\n      <Logo/>\n      <OtherPage/>\n      <DiplomPage/>\n    </div>\n    ) : (<div>\n      <Logo/>\n      <OtherPage/>\n    </div>);\n  }\n}\n\nexport default Mainpage;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport classes from './Navbar.module.css';\nimport {connect} from 'react-redux';\nconst Cookies = require('js-cookie');\n\nclass Navbar extends Component {\n  logout = async () => {\n    await fetch('/users/logout', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      // body: {}\n    });\n    Cookies.remove('user_id');\n    Cookies.remove('username');\n    Cookies.remove('category');\n    Cookies.remove('surname');\n    Cookies.remove('name');\n    Cookies.remove('gender');\n    Cookies.remove('dob');\n    Cookies.remove('hand');\n    Cookies.remove('group');\n    Cookies.remove('year');\n    this.props.logout();\n  };\n\n  render() {\n    return (\n      <div className={classes.Navbar}>\n        <Link className={'textNav'} to={'/'}>Главное меню</Link>\n        <div className={'textNav'}>{Cookies.get('surname')} {Cookies.get('name')} / {Cookies.get('username')}\n        <Link className={'textNav'} onClick={this.logout} to={'/'}>Выйти</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    token: store.token\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './SignUp.css';\n\nconst moment = require('moment');\nconst Cookies = require('js-cookie');\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: true,\n      username: '',\n      password: '',\n      category: 'Студент',\n      surname: null,\n      name: null,\n      gender: 'Мужской',\n      dob: null,\n      hand: 'Правша',\n      group: null,\n      year: moment().format('YYYY'),\n      created: false,\n      failed: false,\n      sending: false,\n    };\n  }\n\n  componentDidMount() {\n    this.generatePassword();\n  }\n\n  changeValue = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  generatePassword = () => {\n    const generatedPassword = Math.floor(\n        Math.random() * (99999999 - 10000000 + 1)) + 10000000;\n    this.setState({password: generatedPassword});\n  };\n\n  signUp = async () => {\n    const {active, username, password, category, surname, name, gender, dob, hand, group, year} = this.state;\n    let body;\n    if (this.state.category === 'Студент') {\n      body = {\n        active,\n        username,\n        password,\n        category,\n        surname,\n        name,\n        gender,\n        dob,\n        hand,\n        group,\n        year,\n      };\n    } else {\n      body = {\n        active,\n        username,\n        password,\n        category,\n        surname,\n        name,\n        gender,\n        dob,\n        hand,\n      };\n    }\n    let resp = await fetch('/users/signup', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(body),\n    });\n    const res = await resp.json();\n    this.setState({sending: true});\n    if (res.succeeded) {\n      this.setState({sending: false});\n      this.setState({created: true});\n    } else {\n      this.setState({sending: false});\n      this.setState({failed: true});\n    }\n  };\n\n  resetForm = () => {\n    this.setState({\n      username: '',\n      password: '',\n      category: 'Студент',\n      surname: null,\n      name: null,\n      gender: 'Мужской',\n      dob: null,\n      hand: 'Правша',\n      group: null,\n      year: moment().format('YYYY'),\n      created: false,\n      failed: false,\n      sending: false,\n    });\n    this.generatePassword();\n  };\n\n  render() {\n    return (\n        <div className={'regContainer'}>\n          {Cookies.get('category') === 'Преподаватель' ?\n              <div>\n                <div><h1>Создание пользователя</h1></div>\n                {this.state.created ?\n                    <div>\n                      <div><h2>Пользователь успешно создан</h2></div>\n                      <div className={'regText'} onClick={this.resetForm}>Создать еще</div>\n                      <Link className={'regText'} to={'/'}>Вернуться в меню</Link>\n                    </div> :\n                    <div>\n                      <div className={'regAttributesBox'}>\n                        <div>\n                          <div>\n                            <div className={'regAttribute'}>Идентификатор:</div>\n                            <div><input className={'regInput regTextEdit'}\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.changeValue}/></div>\n                          </div>\n                          <div>\n                            <div className={'regAttribute'}>Пароль:</div>\n                            <div><input className={'regInput regTextEdit'}\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.changeValue}/>\n                              <div className={'regButton'}\n                                   onClick={this.generatePassword}>новый пароль\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className={'regAttribute'}>Категория:</div>\n                            <div>\n                              <select className={'regTextEdit'} name=\"category\"\n                                      onChange={this.changeValue}>\n                                <option>Студент</option>\n                                <option>Дипломник</option>\n                                <option>Преподаватель</option>\n                              </select>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className={'regAttribute'}>Фамилия:</div>\n                            <div><input className={'regInput regTextEdit'}\n                                        name=\"surname\"\n                                        onChange={this.changeValue}/>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className={'regAttribute'}>Имя:</div>\n                            <div><input className={'regInput regTextEdit'}\n                                        name=\"name\"\n                                        onChange={this.changeValue}/>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div>\n                            <div className={'regAttribute'}>Пол:</div>\n                            <div>\n                              <select className={'regTextEdit'} name=\"gender\"\n                                      onChange={this.changeValue}>\n                                <option>Мужской</option>\n                                <option>Женский</option>\n                              </select>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className={'regAttribute'}>Дата рождения:</div>\n                            <div><input className={'regInput regTextEdit'}\n                                        name=\"dob\" onChange={this.changeValue}\n                                        type=\"date\"/></div>\n                          </div>\n\n                          <div>\n                            <div className={'regAttribute'}>Левша/Правша:</div>\n                            <div>\n                              <select className={'regTextEdit'} name=\"hand\"\n                                      onChange={this.changeValue}>\n                                <option>Правша</option>\n                                <option>Левша</option>\n                              </select>\n                            </div>\n                          </div>\n\n                          {this.state.category === 'Студент' ?\n                              <div>\n\n                                <div>\n                                  <div className={'regAttribute'}>Группа:</div>\n                                  <div><input className={'regInput regTextEdit'}\n                                              name=\"group\"\n                                              onChange={this.changeValue}/>\n                                  </div>\n                                </div>\n\n                                <div>\n                                  <div className={'regAttribute'}>Год:</div>\n                                  <div><input className={'regInput regTextEdit'}\n                                              name=\"year\"\n                                              value={this.state.year}\n                                              onChange={this.changeValue}/>\n                                  </div>\n                                </div>\n\n                              </div> : <div/>\n                          }\n                        </div>\n\n                      </div>\n\n\n                      < div className={'addUserButton'}\n                            onClick={this.signUp}>Добавить пользователя\n                      </div>\n\n                      {this.state.sending ? <div>Подождите...</div> : <div/>}\n\n                      {this.state.failed ?\n                          <div>\n                            При создании пользователя произошла ошибка.<br/>Проверьте\n                            корректность введенных данных и подключение к базе\n                            данных.\n                          </div> : <div/>\n                      }\n                    </div>\n                }\n              </div>\n              :\n              <div>\n                <div><h2>Вы не авторизованы для создания новых\n                  пользователей</h2></div>\n              </div>\n          }\n        </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, {Component} from 'react';\n\nclass StatusButtons extends Component {\n  render() {\n    return (\n        <div className={this.props.class}>\n          {this.props.wall ?\n              <button className={this.props.btnClass + ' ' + 'activeWall'}\n                      onClick={this.props.cellStatus}>стена</button> :\n              <button className={this.props.btnClass + ' ' + 'wallBtn'}\n                      onClick={this.props.cellStatus}>стена</button>}\n          {this.props.food ?\n              <button className={'activeFood' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>кормушка</button> :\n              <button className={'foodBtn' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>кормушка</button>}\n          {this.props.fakeFood ?\n              <button className={'activeFakeFood' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>ложная кормушка</button> :\n              <button className={'fakeFoodBtn' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>ложная кормушка</button>}\n          {this.props.entry ?\n              <button className={'activeEntry' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>вход</button> :\n              <button className={'entryBtn' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>вход</button>}\n          {this.props.exit ?\n              <button className={'activeExit' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>выход</button> :\n              <button className={'exitBtn' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>выход</button>}\n          {this.props.pedal ?\n              <button className={'activePedal' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>педаль</button> :\n              <button className={'pedalBtn' + ' ' + this.props.btnClass}\n                      onClick={this.props.cellStatus}>педаль</button>}\n        </div>\n    );\n  }\n}\n\nexport default StatusButtons;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {ADDVALUE, CHANGEVALUE, fetchField} from '../../store/creators/creators';\nimport './Field.css';\nimport StatusButtons from '../StatusButtons/StatusButtons';\n\nclass Field extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      wall: false,\n      food: false,\n      fakeFood: false,\n      entry: false,\n      exit: false,\n      pedal: false,\n      fieldName: '',\n      saveStatus: false,\n      nameStatus: false,\n      busyName: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onClick();\n  }\n\n  changeValue = (prevValue) => {\n    const getValue = (e) => {\n\n      const x = e.key;\n      const regex = /[\\u0400-\\u04FF0-9]+/g;\n      const match = regex.exec(x);\n      if (x === 'Backspace') {\n        this.props.newValue(prevValue, null);\n      } else if (match) {\n        this.props.newValue(prevValue, x);\n      }\n    };\n    document.onkeydown = getValue;\n  };\n\n  action = (e) => {\n    switch (true) {\n      case this.state.wall:\n        this.props.action(e.target.id, 'wall');\n        break;\n      case this.state.food:\n        this.props.action(e.target.id, 'food');\n        break;\n      case this.state.fakeFood:\n        this.props.action(e.target.id, 'fakeFood');\n        break;\n      case this.state.entry:\n        this.props.action(e.target.id, 'entry');\n        break;\n      case this.state.exit:\n        this.props.action(e.target.id, 'exit');\n        break;\n      case this.state.pedal:\n        this.props.action(e.target.id, 'pedal');\n        break;\n      default:\n        this.changeValue(e.target.id);\n        break;\n    }\n  };\n\n  cellStatus = (e) => {\n    let translate;\n    switch (e.target.innerText) {\n      case 'стена':\n        translate = 'wall';\n        break;\n      case 'кормушка':\n        translate = 'food';\n        break;\n      case 'ложная кормушка':\n        translate = 'fakeFood';\n        break;\n      case 'вход':\n        translate = 'entry';\n        break;\n      case 'выход':\n        translate = 'exit';\n        break;\n      case 'педаль':\n        translate = 'pedal';\n        break;\n    }\n\n    const currentState = this.state;\n    for (let key in currentState) {\n      if (key === 'fieldName') {\n        currentState[key] = currentState[key];\n      } else if (key === translate) {\n        currentState[key] = !currentState[key];\n      } else {\n        currentState[key] = false;\n      }\n    }\n    this.setState(currentState);\n  };\n\n  fieldName = (e) => {\n    this.setState({fieldName: e.target.value});\n  };\n\n  saveField = async () => {\n    this.setState({\n      nameStatus: false,\n      saveStatus: false,\n    });\n    if (this.state.fieldName.length > 0) {\n      const response = await fetch(\n          '/index/saveField',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              name: this.state.fieldName,\n              field: this.props.constructor,\n            }),\n          },\n      );\n\n      const result = await response.json();\n      console.log(result);\n      if (result.answer === 'busy') {\n        this.setState({busyName: true});\n      } else if (result.name) {\n        this.setState({saveStatus: true});\n      }\n    } else {\n      this.setState({nameStatus: true});\n    }\n  };\n\n  render() {\n\n    return (\n        <div className='board'>\n          <input className={'constInput'} onChange={this.fieldName}\n                 value={this.state.fieldName}\n                 placeholder={'Введите имя среды'}/>\n          {this.state.saveStatus && <div>Среда сохранена</div>}\n          {this.state.nameStatus && <div>Введите название среды</div>}\n          {this.state.busyName && <div>Название среды занято</div>}\n\n          <div className={'constMainBox unselectable'}>\n            <div className={'constFieldBox'}>\n              {this.props.constructor &&\n              this.props.constructor.map((element, i) => {\n                return (\n                    <div key={`${element} ${i}`}>{element.line.map(\n                        component => {\n                          let action;\n                          switch (true) {\n                            case component.wall:\n                              action = 'wall comp';\n                              break;\n                            case component.food:\n                              action = 'food comp';\n                              break;\n                            case component.fakeFood:\n                              action = 'fakeFood comp';\n                              break;\n                            case component.entry:\n                              action = 'entry comp';\n                              break;\n                            case component.exit:\n                              action = 'exit comp';\n                              break;\n                            case component.pedal:\n                              action = 'pedal comp';\n                              break;\n                            default:\n                              action = 'comp';\n                              break;\n                          }\n                          return (\n                              <span key={component.index}\n                                    id={component.index}\n                                    className={action}\n                                    onClick={this.action}\n                              >\n                        {component.value ?\n                            <span className={'ValueBtn'}>{component.value}</span> :\n                            component.index}\n                      </span>\n                          );\n                        })}\n                    </div>\n                );\n              })}\n            </div>\n            <div>\n              <StatusButtons class={'constStatusBtnsBox'}\n                             btnClass={'constStatusBtn'} wall={this.state.wall}\n                             food={this.state.food}\n                             fakeFood={this.state.fakeFood}\n                             entry={this.state.entry} exit={this.state.exit}\n                             pedal={this.state.pedal}\n                             cellStatus={this.cellStatus}/>\n            </div>\n          </div>\n          <div className={'constBottomBtnsBox unselectable'}>\n              <button className={'constStatusBtn'}\n                      onClick={this.saveField}>Сохранить среду\n              </button>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    constructor: state.field.field,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: () => {\n      dispatch(fetchField());\n    },\n    action: (index, change) => {\n      dispatch(ADDVALUE(index, change));\n    },\n    newValue: (value, changedValue) => {\n      dispatch(CHANGEVALUE(value, changedValue));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);\n","import React, {Component} from 'react';\n\nconst moment = require('moment');\n\nclass FoundUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      id: this.props.id,\n      username: this.props.username,\n      password: this.props.password,\n      active: this.props.active,\n      category: this.props.category,\n      surname: this.props.surname,\n      name: this.props.name,\n      gender: this.props.gender,\n      dob: this.props.dob,\n      hand: this.props.hand,\n      group: this.props.group,\n      year: this.props.year,\n      saved: null,\n      confirmation: false,\n    };\n  }\n\n  delete = async (e) => {\n    const id = this.state.id;\n    let resp = await fetch('/users/delete', {\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id}),\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.succeed) {\n      this.setState({loading: false});\n      this.props.fetch();\n    } else {\n      this.setState({loading: false});\n    }\n  };\n\n  switchStatus = async (e) => {\n    this.setState({saved: null});\n    const id = this.state.id;\n    let resp = await fetch('/users/switch_status', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id}),\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.succeed) {\n      this.setState({loading: false, active: !this.state.active, saved: true});\n    } else {\n      this.setState({loading: false, active: this.props.active, saved: false});\n    }\n  };\n\n  editMode = () => {\n    this.setState({edit: !this.state.edit, saved: null});\n    // this.setState(this.props);\n  };\n\n  changeValue = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  save = async () => {\n    try {\n      const {id, username, password, category, surname, name, gender, dob, hand, group, year} = this.state;\n      let body;\n      if (this.state.category === 'Студент') {\n        body = {\n          id,\n          username,\n          password,\n          category,\n          surname,\n          name,\n          gender,\n          dob,\n          hand,\n          group,\n          year,\n        };\n      } else {\n        body = {\n          id,\n          username,\n          password,\n          category,\n          surname,\n          name,\n          gender,\n          dob,\n          hand,\n        };\n      }\n      let resp = await fetch('/users/edit', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(body),\n      });\n      const res = await resp.json();\n      if (res.succeeded) {\n        this.setState({saved: true});\n        this.setState({edit: false});\n        // this.setState({...body});\n      } else {\n        this.setState({saved: false});\n        this.setState(this.props);\n      }\n    } catch (e) {\n      this.setState({saved: false});\n      this.setState(this.props);\n    }\n  };\n\n  render() {\n    return (\n        <div id={this.props.id}>\n          <hr/>\n          <div>\n            <div className={'attributesBox'}>\n              <div className={'leftBlock'}>\n                <div className={'attribute'}> Имя:\n                  {this.state.edit ?\n                      <div><input className={'input textEdit'} name=\"surname\"\n                                  placeholder=\"Фамилия\"\n                                  value={this.state.surname}\n                                  onChange={this.changeValue}/><input\n                          className={'input textEdit'} name=\"name\"\n                          placeholder=\"Имя\" value={this.state.name}\n                          onChange={this.changeValue}/></div>\n                      :\n                      <div\n                          className={'text'}> {this.state.surname} {this.state.name}</div>\n                  }\n                </div>\n                <div className={'attribute'}> Категория:\n                  {this.state.edit ?\n                      <div>\n                        <select className={'selector textEdit'}\n                                value={this.state.category}\n                                name=\"category\" onChange={this.changeValue}>\n                          <option>Студент</option>\n                          <option>Дипломник</option>\n                          <option>Преподаватель</option>\n                        </select>\n                      </div>\n                      :\n                      <div className={'text'}>{this.state.category}</div>\n                  }\n                  {this.state.active === false ?\n                      <div className={'text'}>отключен</div> :\n                      <div/>}\n                </div>\n                < div\n                    className={'attribute'}> Идентификатор: {this.state.edit ?\n                    <div><input className={'input textEdit'} name=\"username\"\n                                value={this.state.username}\n                                onChange={this.changeValue}/></div> :\n                    <div className={'text'}>{this.state.username}</div>}</div>\n                <div className={'attribute'}>Пароль: {this.state.edit ?\n                    <div><input className={'input textEdit'} name=\"password\"\n                                value={this.state.password}\n                                onChange={this.changeValue}/></div> :\n                    <div className={'text'}>{this.state.password}</div>}</div>\n              </div>\n              <div>\n                <div className={'attribute'}>\n                  {this.state.category === 'Студент' ?\n                      <div>\n                        <div className={'studentBox'}>\n                          <div className={'attribute'}>\n                            Группа: {this.state.edit ?\n                              <div><input className={'input textEdit'}\n                                          name=\"group\"\n                                          value={this.state.group}\n                                          onChange={this.changeValue}/></div> :\n                              <div className={'text'}>{this.state.group}</div>}\n                          </div>\n                        </div>\n                        <div className={'studentBox'}>\n                          <div className={'attribute'}>\n                            Год: {this.state.edit ?\n                              <div><input className={'input textEdit'}\n                                          name=\"year\"\n                                          value={this.state.year}\n                                          onChange={this.changeValue}/></div> :\n                              <div className={'text'}>{this.state.year}</div>}\n                          </div>\n                        </div>\n                      </div>\n                      : <div/>}\n                </div>\n                <div className={'attribute'}>Пол: {this.state.edit ?\n                    <div>\n                      <select className={'selector textEdit'}\n                              value={this.state.gender}\n                              name=\"gender\" onChange={this.changeValue}>\n                        <option>Мужской</option>\n                        <option>Женский</option>\n                      </select>\n                    </div>\n                    :\n                    <div className={'text'}>{this.state.gender}</div>}</div>\n                <div className={'attribute'}>Дата рождения: {this.state.edit ?\n                    <div><input className={'input textEdit'}\n                                value={moment(this.state.dob).format('YYYY-MM-DD')}\n                                name=\"dob\" onChange={this.changeValue}\n                                type=\"date\"/>\n                    </div> :\n                    <div className={'text'}>{moment(this.state.dob).format('DD.MM.YYYY')}</div>}</div>\n                <div className={'attribute'}>Рука: {this.state.edit ?\n                    <div><select className={'selector textEdit'}\n                                 value={this.state.hand}\n                                 name=\"hand\" onChange={this.changeValue}>\n                      <option>Правша</option>\n                      <option>Левша</option>\n                    </select></div> :\n                    <div className={'text'}>{this.state.hand}</div>}</div>\n              </div>\n            </div>\n            <div>\n              {this.state.edit ?\n                  <div className={'btnRow'}>\n                    {this.state.saved === false ?\n                        <div>При сохранении произошла ошибка</div> :\n                        <div/>}\n                    <div className={'button'} onClick={this.save}>Сохранить\n                    </div>\n                    <div className={'button'} onClick={this.editMode}>Отмена\n                    </div>\n                  </div>\n                  :\n                  <div className={'btnRow'}>\n                    {this.state.saved === true ?\n                        <div>Изменения сохранены</div> :\n                        <div/>}\n                    <div className={'button'}\n                         onClick={this.editMode}>Редактировать\n                    </div>\n                    {this.state.active ?\n                        <div className={'button'}\n                             onClick={this.switchStatus}>Отключить</div> :\n                        <div className={'button'}\n                             onClick={this.switchStatus}>Включить</div>}\n                    <div className={'button'} onClick={this.delete}>Удалить\n                    </div>\n                  </div>\n              }\n            </div>\n          </div>\n        </div>\n\n    );\n  }\n}\n\nexport default FoundUser;\n","import React, {Component} from 'react';\nimport FoundUser from './FoundUser/FoundUser';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport './UserList.css';\nconst Cookies = require('js-cookie');\nconst objectRenameKeys = require('object-rename-keys');\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'group',\n      query: '',\n      response: [],\n      loading: false,\n      error: false,\n      category: Cookies.get('category'),\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.searchAll();\n  };\n\n  exportToExcel = () => {\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const changesMap = {\n      active: 'Статус',\n      username: 'Идентификатор',\n      password: 'Пароль',\n      category: 'Категория',\n      surname: 'Фамилия',\n      name: 'Имя',\n      gender: 'Пол',\n      dob: 'Дата рождения',\n      hand: 'Рука',\n      group: 'Группа',\n      year: 'Год',\n    };\n    const translatedArray = this.state.response.map((i) => objectRenameKeys(i, changesMap));\n    const newArray = translatedArray.map(({_id, __v, ...keepAttrs}) => keepAttrs);\n    const ws = XLSX.utils.json_to_sheet(newArray);\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    FileSaver.saveAs(data, 'search_results' + fileExtension);\n  };\n\n  searchAll = async () => {\n    let resp = await fetch('/users/search/all', {\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'},\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.response) {\n      this.setState({loading: false, error: false, response: res.response});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n  };\n\n  changeType = async (e) => {\n    if (e.target.value === 'Группа') {\n      this.setState({type: 'group'})\n    } else if (e.target.value === 'Фамилия') {\n      this.setState({type: 'surname'})\n    } else if (e.target.value === 'Категория') {\n      this.setState({type: 'category'})\n    } else if (e.target.value === 'Год') {\n      this.setState({type: 'year'})\n    }\n    await this.search();\n  };\n\n  changeQuery = async (e) => {\n      await this.setState({query: e.target.value});\n      await this.search();\n  };\n\n  search = async () => {\n    const {type, query} = this.state;\n    let resp = await fetch('/users/search', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({type, query})\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.response) {\n      this.setState({loading: false, error: false, response: res.response});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n  };\n\n  reset = async () => {\n    this.setState({\n      query: '',\n      response: [],\n      loading: false,\n      error: false,\n      authorized: true,\n    });\n    await this.searchAll();\n  };\n\n  render() {\n    return (\n        <div className={'container'}>\n        {this.state.category === 'Преподаватель' ?\n\n            <div>\n              <div className={'title'}><h1>Поиск</h1></div>\n              <div>\n                <select className={'selector'} name=\"type\" onChange={this.changeType}>\n                  <option>Группа</option>\n                  <option>Фамилия</option>\n                  <option>Год</option>\n                  <option>Категория</option>\n                </select>\n                {this.state.type === \"group\" ? <input className={'topInput'} value={this.state.query} onChange={this.changeQuery} placeholder={'введите номер группы'}/> :\n                    this.state.type === \"surname\" ?\n                    <input className={'topInput'} value={this.state.query} onChange={this.changeQuery} placeholder={'введите фамилию'}/>:\n                        this.state.type === \"category\" ?\n                            <select className={'selector'} value={this.state.query} onChange={this.changeQuery}>\n                              <option>Студент</option>\n                              <option>Дипломник</option>\n                              <option>Преподаватель</option>\n                            </select>:\n                            this.state.type === \"year\" ? <input className={'topInput'} value={this.state.query} onChange={this.changeQuery} placeholder={'введите год'}/>:\n                            null\n                }\n                <div className={'btnRow'}>\n                  <div className={'button'} onClick={this.reset}>Сбросить</div>\n                  {this.state.response.length !== 0 ? <div className={'button'} onClick={this.exportToExcel}>Скачать результаты поиска в *.xlsx</div> : <div/>}\n                </div>\n              </div>\n              <div>\n                {this.state.error ?\n                    <div><h2>ОШИБКА: Проверьте подключение к базе данных.</h2></div> :\n                    <div>\n                      {this.state.loading ?\n                          <div><h2>Загрузка...</h2></div> :\n                          <div>\n                            {this.state.response.length !== 0 ?\n                                <div>\n                                  {this.state.response.map((result, index) => <FoundUser\n                                      key = {index}\n                                      id = {result._id}\n                                      active = {result.active}\n                                      surname = {result.surname}\n                                      name = {result.name}\n                                      category = {result.category}\n                                      username = {result.username}\n                                      password = {result.password}\n                                      gender = {result.gender}\n                                      dob = {result.dob}\n                                      hand = {result.hand}\n                                      group = {result.group}\n                                      year = {result.year}\n                                      fetch = {this.searchAll}\n                                  />)}\n                                </div> :\n                                <div><h2>По вашему запросу нет результатов</h2></div>\n                            }\n                          </div>\n                      }\n                    </div>\n                }\n              </div>\n            </div> :\n            <div>\n              <h2>Вы не имеете доступа к этому разделу</h2>\n            </div>\n        }\n        </div>\n    );\n  }\n}\n\nexport default UserList;\n","import React, {Component} from 'react';\nimport './Documentation.css';\n\nclass Documentation extends Component {\n  render() {\n    return (\n      <div className={'container'}>\n        <div className={'logo'}>\n          <img src={'/img/logo.png'} alt=\"...\"/>\n        </div>\n        <h1>Labyrinth_MSU</h1>\n        <p>Виртуальная среда для протоколирования поведенческого эксперимента\n            в многоальтернативной среде.</p>\n        <h2>Начало работы</h2>\n        <p>При входе на страницу программа проверяет существует ли активный\n            зарегестрированный пользователь. Если нет - происходит переход на\n            страницу авторизации. После успешной авторизации пользователь\n            попадает в Главное меню. Существуют три типа пользователя\n            \"Преподаватель\", \"Студент\" и \"Дипломник\".</p>\n\n          Для пользователя типа \"Студент\" в главном меню существуют две\n          возможности:<br/>\n        <ul>\n          <li>\n              Перейти к выбору шаблона среды для предстоящего эксперимента;\n          </li>\n          <li>\n              Перейти к просмотру результатов ранее проведённых им\n              экспериментов.\n          </li>\n        </ul>\n          \"Дипломник\" имеет три опции:\n        <ul>\n          <li>\n              Переход к выбору шаблона среды;\n          </li>\n          <li>\n              Переход к просмотру результатов его прошедших экспериментов, а\n              также\n              экспериментов студентов;\n          </li>\n          <li>\n              Переход к конструктору среды.\n          </li>\n        </ul>\n          \"Преподаватель\" же имеет доступ к следующим возможностям:\n        <ul>\n          <li>\n              Конструктор сред;\n          </li>\n          <li>\n              Выбор шаблона среды;\n          </li>\n          <li>\n              Просмотр результатов всех экспериментов проведённых\n              пользователями;\n          </li>\n          <li>\n              Регистрация новых пользователей;\n          </li>\n          <li>\n              Доступ к списку зарегистрированных пользователей;\n          </li>\n        </ul>\n        <h2>Регистрация и список пользователей</h2>\n        <p>Пользователь с типом \"Преподаватель\" имеет возможность\n            регистрировать новых пользователей. При нажатии на кнопку\n            \"Регистрация\" в Главном меню происходит переход на страницу с полями\n            ввода данных о пользователе. В зависимости от выбора категории поля\n            ввода данных меняются. Также предусмотрена возможность\n            автоматической генерации идентификатора (login) и пароля (password)\n            для удобсва регисьрации большого количества студентов.</p>\n        <p>На странице вывода архива пользователей имеется возможность\n            фильтрации по группе и по фамилии. Также имеется возможность вывода\n            отфильтрованного списка пользователей в формате .txt для удобсва\n            последующей печати идентификаторов и паролей для студентов.</p>\n        <h2>Конструктор</h2>\n        <p>У Преподавателей и Дипломников имеется возможность создавать новые\n            среды для проведения экспериментов. При переходе на страницу\n            конструктора автоматически генерируется поле 11х11 со 121 ячейкой\n            имеющей свой собственный идентификатор от \"a1\" до \"k11\". При клике\n            на каждую из ячеек имеется возможность добавления имени отсека.</p>\n        <p>В правом нижнем углу страницы находится блок кнопок изменения\n            состояния среды. При клике на одну из кнопок происходит выбор\n            активного состояния среды. При наличии активного состояния над полем\n            появлется его название и цвет соответствующий ему, в этом случае\n            клик на одну из ячеек меняет её состояние. Повторный клик на кнопку\n            выбора состояния деактивирует его.</p>\n        <p>Отсеки могут принимать следующие состояния:</p>\n        <ul>\n          <li>\n              Стена\n          </li>\n          <li>\n              Кормушка\n          </li>\n          <li>\n              Ложная кормушка\n          </li>\n          <li>\n              Вход\n          </li>\n          <li>\n              Выход\n          </li>\n          <li>\n              Педаль\n          </li>\n        </ul>\n        <p>В левом верхнем углу находится поле ввода названия среды. В левом\n            нижнем углу кнопки для сохранения шаблона в базе данных и перехода к\n            началу эксперимента.</p>\n        <h2> Архив сред </h2>\n        <p>Во вкладке \"Архив сред\" списком выводятся все доступные среды\n              для\n              эксперимента. При выборе одной из них происходит переход на\n              страницу\n              с экспериментом с использованием данной среды. У пользователей\n              категории \"Преподаватель\" также имеется возможность\n              удаления.</p>\n        <h2> Архив экспериментов </h2>\n        <p>Вкладка \"Архив экспериментов\" содержит список ранее\n                проведенных\n                экспериментов. Разные категории пользователей имеют разный\n                доступ.</p>\n        <p>Студенты могут просматривать результаты только собственных\n                экспериментов; Дипломникам выводятся результаты их\n                собственных\n                экспериментов плюс экспериментов студентов; Преподаватели\n                имеют\n                доступ ко всем результатам.</p>\n        <p>Предусмотрена возможность вывода на экран и поледующей\n                выгрузки в\n                формате .txt подробного отчета с результатами эксперимента и\n                со\n                всеми данными о его авторе.</p>\n\n        <p>В данной вкладке имеется возможность фильтрации по дате и\n                названию\n                эксперимента. Также пользователь имеет возможность выгрузить\n                результаты всех отфильтрованных экспериментов в .txt\n                формате.</p>\n        <h2> Эксперимент </h2>\n        <p>На странице эксперимента в левом верхнем углу\n                  пользователь видит\n                  название среды и имеет возможность ввести название\n                  эксперимента,\n                  номер опыта и имя особи.</p>\n        <p>В зависимости от того правша ли пользователь или левша\n                  справа или\n                  слева от поля отрисовывается виртуальная клавиатура\n                  содержащая\n                  возможные реакции особи (чесание, чихание, стойки и\n                  другие).\n                  Фиксация реакции происходит как при клике/двойном клике\n                  мыши по\n                  соответствующей клавише, так и при нажати/двойном нажатии\n                  на кнопки\n                  NumPad на физической клавиатуре. Также имеется возможность\n                  удаления\n                  ошибочно введенной рекции или перемещения с помощью кнопки\n                  на\n                  виртуальной клавиатуре и при нажатии клавиши Backspace.\n                  В этом же блоке находится счетчик количества подкреплений</p>\n        <p>В нижнем блоке находится поле выводящее положение мыши и\n                  её реакции.\n                  Также в левой части находятся кнопки \"Начать эксперимент\"\n                  запускающая отсчёт времени и \"Закончить эксперимент\"\n                  сохраняющая\n                  результаты в базу данных и обновляющая страницу для\n                  возможности\n                  начать следующий эксперимент.</p>\n        <p>Правее находится блок кнопок изменяющий состояние ячеек\n                  для\n                  возможности менять состояние среды в процессе проведения\n                  эксперимента. Также здесь находится кнопка при нажатии на\n                  которую\n                  пользователь может определить начальную позицию особи при\n                  клике на\n                  одну из ячеек.</p>\n        <h2>Таблица реакций</h2>\n        <table>\n          <tbody>\n            <tr>\n              <td> / - вкл/выкл свет </td>\n              <td> * - вкл/выкл звук </td>\n              <td> - - резерв  </td>\n            </tr>\n            <tr>\n              <td>t - тик <br/> ? - испуг</td>\n              <td>h - колеблется <br/> _ - обтирается, <br/> бьет хвостом (м) </td>\n              <td>o - остановка <br/> i - сидит </td>\n            </tr>\n            <tr>\n              <td>j - прыжок <br/> q - плачет <br/> </td>\n              <td>╎ - вверх <br/> b - лезет вверх </td>\n              <td>s - нюхает <br/> l - лижет </td>\n              <td rowSpan={'3'}> + - взяла пищу <br/> a - ест </td>\n            </tr>\n            <tr>\n              <td>e - чихает <br/> x - отряхивается, <br/> дрожит (м)</td>\n              <td>w - умывается <br/> z - замирает </td>\n              <td>r - чешется <br/> m - чесотка </td>\n            </tr>\n            <tr>\n              <td colSpan={'2'}>y - зевает, скребёт (м) <br/> d - лежит, спит (м) </td>\n              <td>k - стучит зубами <br/> g - грызёт </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n    ;\n  }\n}\nexport default Documentation;\n","import React from 'react';\nimport classes from './Loader.module.css';\n\nconst Loader = (props) => (\n  <div className={classes.center}>\n    <div className={classes.Loader}>\n      <div/>\n      <div/>\n    </div>\n  </div>);\n\nexport default Loader;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router';\nimport lodash from 'lodash';\nimport classes from './Results.module.css';\nimport Loader from '../../containers/Loader/Loader';\nimport {saveAs} from 'file-saver';\nimport moment from 'moment';\n\nconst Cookies = require('js-cookie');\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: 'expType',\n      query: '',\n      response: [],\n      loading: false,\n      error: false,\n      category: Cookies.get('category'),\n      sort: 'asc',\n      sortField: 'pp',\n      row: null,\n      find: '',\n      option: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.searchAll();\n  };\n\n  onSort = sortField => {\n    const cloneData = this.state.response;\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const orderedData = lodash.orderBy(cloneData, sortField, sortType);\n    this.setState({\n      response: orderedData,\n      sort: sortType,\n      sortField,\n    });\n  };\n\n  onSaveTxt = async id => {\n  \n    let results = [];\n    const result = this.state.response;\n    for await (let item of result) {\n       item._id = id ? results.push(item) : null\n    }\n\n    const {\n      date, time, expName,\n      expNumber, animalName, expType, numberOfReinforcements,\n    } = results['0'];\n\n    const elemFile = [\n      `${date}\\n`,\n      `${time}\\n`,\n      `${results['0'].env.name}\\n`,\n      `${expName}\\n`,\n      `${expNumber}\\n`,\n      `${animalName}\\n`,\n      `${expType}\\n`,\n      `${numberOfReinforcements ? numberOfReinforcements : '-'}\\n`,\n      `${results['0'].user.surname}\\n`,\n      `${results['0'].user.name}\\n`,\n      `${results['0'].user.dob\n        ? moment().diff(results['0'].user.dob, 'years')\n        : '-'}\\n`,\n      `${results['0'].user.gender}\\n`,\n      `${results['0'].user.hand}\\n`,\n      `${results['0'].user.year ? results['0'].user.year : '-'}\\n`,\n      `${results['0'].user.group ? results['0'].user.group : '-'}\\n`,\n    ];\n\n    let timeLine = [];\n    if (results['0'].moves !== null) {\n      results['0'].moves.forEach((elem) => {\n        timeLine.push(`${Object.keys(elem)}:${Object.values(elem)}\\n`);\n      });\n    }\n\n    const newFile = [\n      ...elemFile,\n      ...timeLine];\n\n    const blob = await new Blob(newFile, {type: 'text/plain;charset=utf-8'});\n    await saveAs(blob,\n      `${results['0'].env.name}_${expType}_${expName}_${expNumber}_${animalName}`);\n\n  };\n\n  onSaveAll = () => {\n    const result = this.state.response;\n    let newFile = [];\n\n    for (let elem of result) {\n      let elemFile = [];\n\n      const {\n        date, time, expName,\n        expNumber, animalName, expType, numberOfReinforcements,\n      } = elem;\n\n      elemFile.push(`${date}\\n`,\n        `${time}\\n`,\n        `${elem.env.name}\\n`,\n        `${expName}\\n`,\n        `${expNumber}\\n`,\n        `${animalName}\\n`,\n        `${expType}\\n`,\n        `${numberOfReinforcements ? numberOfReinforcements : '-'}\\n`,\n        `${elem.user.surname}\\n`,\n        `${elem.user.name}\\n`,\n        `${elem.user.dob\n          ? moment().diff(elem.user.dob, 'years')\n          : '-'}\\n`,\n        `${elem.user.gender}\\n`,\n        `${elem.user.hand}\\n`,\n        `${elem.user.year ? elem.user.year : '-'}\\n`,\n        `${elem.user.group ? elem.user.group : '-'}\\n`);\n\n      let timeLine = [];\n      if (elem.moves !== null) {\n        elem.moves.forEach((element) => {\n          timeLine.push(`${Object.keys(element)}:${Object.values(element)}\\n`);\n        });\n      }\n\n      newFile = [\n        ...newFile,\n        ...elemFile,\n        ...timeLine];\n\n    }\n\n    const blob =  new Blob(newFile, {type: 'text/plain;charset=utf-8'});\n     saveAs(blob, `Results`);\n  };\n\n  onDelete = async id => {\n    if (this.state.category === 'Преподаватель') {\n      const response = await fetch('/experiment', {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({id}),\n      });\n      const results = await response.json();\n      this.setState({\n        response: results,\n      });\n    }\n  };\n\n  searchAll = async () => {\n\n    const id = Cookies.get('user_id');\n    let response = '';\n\n    Cookies.get('category') === 'Студент' ?\n      response = await fetch('/experiment/', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({id}),\n      }) :\n\n      response = await fetch('/experiment', {\n        method: 'GET',\n        headers: {'Content-Type': 'application/json'},\n      });\n\n    const result = await response.json();\n    this.setState({\n      loading: true, option: [\n        'Тип эксперимента', 'Название эксперимента'],\n    });\n\n    if (result) {\n      this.setState({loading: false, error: false, response: result});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n\n  };\n\n  changeType = async (e) => {\n    if (e.target.value === 'Тип эксперимента') {\n      this.setState({type: 'expType'});\n      await this.search();\n    } else if (e.target.value === 'Название эксперимента') {\n      this.setState({type: 'expName'});\n      await this.search();\n    }\n    await this.search();\n  };\n\n  changeQuery = async (e) => {\n    await this.setState({query: e.target.value});\n    await this.search();\n  };\n\n  search = async () => {\n    const {type, query} = this.state;\n    const id = Cookies.get('user_id');\n    const category = Cookies.get('category');\n    let response = '';\n\n    Cookies.get('category') === 'Студент' ?\n      response = await fetch('/experiment/studentSearch', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({type, query, id, category}),\n      }) :\n      response = await fetch('/experiment/allSearch', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({type, query, id, category}),\n      });\n\n    const res = await response.json();\n    this.setState({loading: true});\n    if (res.response) {\n      this.setState({loading: false, error: false, response: res.response});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n  };\n\n  reset = async () => {\n    this.setState({\n      type: 'expType',\n      query: '',\n      response: [],\n      loading: false,\n      error: false,\n      option: [],\n\n    });\n    await this.searchAll();\n  };\n\n  render() {\n\n    return this.state.response ? (\n      <div>\n        <div className={classes.Header}>\n          <div><img src=\"/img/logo.png\" alt=\"\" className={classes.logo}/></div>\n        </div>\n        <div className={classes.LayoutRes}>\n          <div className={'title'}><h1>Поиск</h1></div>\n          <div className={classes.Header}>\n\n            <select\n              className={classes.selector}\n              name=\"type\"\n              onChange={this.changeType}>\n              {this.state.option.map((elem, index) => {\n                return (\n                  <option key={index}>\n                    {elem}\n                  </option>);\n              })}\n            </select>\n            {\n              this.state.type === 'expType' ?\n                <input\n                  className={classes.topInput}\n                  value={this.state.query}\n                  onChange={this.changeQuery}\n                  placeholder={'введите тип эксперемента'}\n                /> :\n                this.state.type === 'expName' ?\n                  <input\n                    className={classes.topInput}\n                    value={this.state.query}\n                    onChange={this.changeQuery}\n                    placeholder={'введите название эксперемента'}\n                  /> :\n                  null\n            }\n            <div\n              className={classes.button}\n              onClick={this.reset}\n            >Сбросить\n            </div>\n          </div>\n          <div className={classes.resTableDiv}>\n            <div className={classes.resTable}>\n              <div className={classes.resTableHead}>\n                <div className={classes.resDate}\n                     onClick={this.onSort.bind(this, 'date')}>Дата\n                </div>\n                <div className={classes.resType}\n                     onClick={this.onSort.bind(this, 'expType')}>Тип\n                </div>\n                <div className={classes.resUser}\n                     onClick={this.onSort.bind(this, 'username')}>Пользователь\n                </div>\n                <div className={classes.resName}\n                     onClick={this.onSort.bind(this, 'expName')}>Эксперимент\n                </div>\n                <div className={classes.resNumber}\n                     onClick={this.onSort.bind(this, 'expNumber')}>Номер\n                  опыта\n                </div>\n                <div className={classes.resAnimal}\n                     onClick={this.onSort.bind(this, 'animalName')}>Имя\n                  особи\n                </div>\n\n                <div style={{width:320, marginLeft:8}}>\n                  <div style={{margin:'auto'}} className={classes.Option}\n                       onClick={this.onSaveAll}>Скачать\n                  </div>\n                </div>\n\n              </div>\n              <div className={classes.resResultBox}>\n                {this.state.response.map((result, index) => {\n                  return (\n                    <div className={classes.resResult} key={index}\n                         name={result._id}>\n                      <div className={classes.resDate}>{result.date}</div>\n                      <div className={classes.resType}>{result.expType}</div>\n                      <div className={classes.resUser}>{result.user\n                        ? result.user.username\n                        : null}</div>\n                      <div className={classes.resName}>{result.expName}</div>\n                      <div\n                        className={classes.resNumber}>{result.expNumber}</div>\n                      <div\n                        className={classes.resAnimal}>{result.animalName}</div>\n                      <div className={classes.resOptionBox}>\n                        <div\n                          className={classes.Option}\n                          onClick={() => this.props.history.push(\n                            '/results/' + result._id)}\n                        >Смотреть\n                        </div>\n                        <div\n                          className={classes.Option}\n                          onClick={this.onSaveTxt.bind(this,\n                            result._id)}>Скачать\n                        </div>\n                        {Cookies.get('category') === 'Преподаватель' ? <div\n                          className={classes.Option}\n                          onClick={this.onDelete.bind(this, result._id)}\n                        >Удалить\n                        </div> : null}\n                      </div>\n                    </div>\n                  );\n                })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (<Loader/>);\n  }\n}\n\nexport default withRouter(Results);\n","import React, {Component} from 'react';\nimport classes from './ResultDetail.module.css';\nimport Loader from '../../../containers/Loader/Loader';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom'\n\nclass ResultDetail extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      details: '',\n      loading: true,\n    };\n  }\n  \n  componentDidMount = async () => {\n    this.setState({loading: true});\n    const id = this.props.match.params.id;\n    const response = await fetch('/experiment/details', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id}),\n    });\n    const result = await response.json();\n    this.setState({details: result[0], loading: false});\n  };\n  \n  render() {\n    return !this.state.loading ? (\n      <div className={classes.ResultDetail}>\n        <hr/>\n        <div className={classes.back}>\n          <div>Дата: {this.state.details.date ? this.state.details.date : '-'}</div>\n          <div> <Link to={'/results'}>Вернуться назад </Link></div>\n        </div>\n        <div>Время: {this.state.details.time ? this.state.details.time : '-'}</div>\n        <div>Название среды: {this.state.details.env.name ? this.state.details.env.name : '-'}</div>\n        <div>Название эксперимента: {this.state.details.expName ? this.state.details.expName : '-'}</div>\n        <div>Номер опыта: {this.state.details.expNumber ? this.state.details.expNumber : '-'}</div>\n        <div>Имя особи: {this.state.details.animalName ? this.state.details.animalName : '-'}</div>\n        <div>Тип эксперимента: {this.state.details.expType ? this.state.details.expType : '-'}</div>\n        <div>Количество подкормов: {this.state.details.numberOfReinforcements ? this.state.details.numberOfReinforcements : '-'}</div>\n        <hr/>\n        <div>Эксперимент проведен</div>\n        <div>Фамилия: {this.state.details.user.surname ? this.state.details.user.surname : '-'}</div>\n        <div>Имя: {this.state.details.user.name ? this.state.details.user.name : '-'}</div>\n        <div>Возраст: {this.state.details.user.dob ? moment().diff(this.state.details.user.dob, 'years') : '-'}</div>\n        <div>Пол: {this.state.details.user.gender ? this.state.details.user.gender : '-'}</div>\n        <div>Рука: {this.state.details.user.hand ? this.state.details.user.hand : '-'}</div>\n        <div>Год: {this.state.details.user.year ? this.state.details.user.year : '-'}</div>\n        <div>Группа: {this.state.details.user.group ? this.state.details.user.group : '-'}</div>\n        <hr/>\n        <table width=\"100%\" cellSpacing=\"0\" border=\"1\">\n          <thead>\n          <tr style={{textAlign:'center'}}>\n            <td>Время</td>\n            <td>Действие</td>\n          </tr>\n          </thead>\n          {this.state.details.moves ? this.state.details.moves.map((timeAndDo, index) => {\n            return (\n              <tbody key={index}>\n              <tr style={{textAlign:'center'}}>\n                <td>{Object.keys(timeAndDo)}</td>\n                <td>{Object.values(timeAndDo)}</td>\n              </tr>\n              </tbody>);\n          }) : null}\n        </table>\n      </div>\n    ) :  (<Loader />);\n  }\n}\n\nexport default ResultDetail;\n","import React, {Component} from 'react';\nimport './Keyboard.css';\n\nclass Keyboard extends Component {\n  render() {\n    return (\n        <div className={'Keyboard unselectable'} onClick={this.props.click}>\n          <div className={'keyBtnRow keyTopRow'}>\n            <div className={'keyBtnTop'}>/</div>\n            <div className={'keyBtnTop'}>*</div>\n            <div className={'keyBtnTop'}>-</div>\n          </div>\n          <div className={'keyBtnRow'}>\n            <div>\n              <div className={'keyBtnRow'}>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>t</div>\n                  <div className={'right'}>?</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>h</div>\n                  <div className={'right'}>_</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>o</div>\n                  <div className={'right'}>i</div>\n                </div>\n              </div>\n              <div className={'keyBtnRow'}>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>j</div>\n                  <div className={'right'}>q</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>╎</div>\n                  <div className={'right'}>b</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>s</div>\n                  <div className={'right'}>l</div>\n                </div>\n              </div>\n              <div className={'keyBtnRow'}>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>e</div>\n                  <div className={'right'}>x</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>w</div>\n                  <div className={'right'}>z</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>r</div>\n                  <div className={'right'}>m</div>\n                </div>\n              </div>\n              <div className={'keyBtnRow'}>\n                <div className={'keyWideBtn'}>\n                  <div className={'left'}>y</div>\n                  <div className={'right'}>d</div>\n                </div>\n                <div className={'keyBtn'}>\n                  <div className={'left'}>k</div>\n                  <div className={'right'}>g</div>\n                </div>\n              </div>\n            </div>\n            <div className={'keyLongBtn'}>\n              <div className={'left'}>+</div>\n              <div className={'right'}>a</div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Keyboard;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  CHANGECOMP,\n  DELETEACTION,\n  expField,\n  KEYBOARDACTION,\n  MOUSEACTION,\n  MOVEDOWN,\n  MOVELEFT,\n  MOVERIGHT,\n  MOVEUP,\n  NEWVALUE,\n  saveExp,\n  STARTPOS,\n} from '../../store/creators/creators';\nimport '../Field/Field.css';\nimport StatusButtons from '../StatusButtons/StatusButtons';\nimport Keyboard from '../Keyboard/Keyboard';\nimport './Experiment.css';\n\nconst Cookies = require('js-cookie');\n\nconst initialState = {\n  expName: '',\n  expNumber: 1,\n  expAnimal: '',\n  expType: '',\n  timer: 0,\n  wall: false,\n  food: false,\n  fakeFood: false,\n  entry: false,\n  exit: false,\n  pedal: false,\n  changeStatus: false,\n  startPosition: false,\n  moveStatus: false,\n  expBegin: false,\n  loading: false,\n  error: false,\n  response: null,\n  type: null,\n  description: null,\n  click: '',\n  clickCounter: 0,\n  feeding: 0,\n  hand: true\n};\n\nclass Experiment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {...initialState};\n  }\n\n  componentDidMount = async () => {\n    this.props.fullField(this.props.match.params.id);\n    this.setState({response: null});\n    let resp = await fetch('/index/types', {\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'},\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.response) {\n      this.setState({loading: false, error: false, response: res.response});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  changeHand = () => {\n    if (this.state.hand === true) {\n      this.setState({hand: false})\n    } else {\n      this.setState({hand: true})\n    }\n  }\n\n  changeValue = (prevValue) => {\n    const getValue = (e) => {\n\n      const x = e.key;\n      const regex = /[\\u0400-\\u04FF0-9]+/g;\n      const match = regex.exec(x);\n      if (x === 'Backspace') {\n        this.props.newValue(prevValue, null);\n      } else if (match) {\n        this.props.newValue(prevValue, x);\n        this.setState({changeStatus: !this.state.changeStatus});\n      }\n    };\n    document.onkeydown = getValue;\n  };\n\n  newExpNumber = (e) => {\n    this.setState({expNumber: e.target.value});\n  };\n\n  newExpAnimal = (e) => {\n    this.setState({expAnimal: e.target.value});\n  };\n\n  expType = (e) => {\n    this.setState({expType: e.target.value});\n  };\n\n  action = (e) => {\n    switch (true) {\n      case this.state.wall:\n        this.props.newComp(e.target.id, 'wall');\n        break;\n      case this.state.food:\n        this.props.newComp(e.target.id, 'food');\n        break;\n      case this.state.fakeFood:\n        this.props.newComp(e.target.id, 'fakeFood');\n        break;\n      case this.state.entry:\n        this.props.newComp(e.target.id, 'entry');\n        break;\n      case this.state.exit:\n        this.props.newComp(e.target.id, 'exit');\n        break;\n      case this.state.pedal:\n        this.props.newComp(e.target.id, 'pedal');\n        break;\n      case this.state.startPosition:\n        this.props.startPos(e.target.id);\n        break;\n      default:\n        this.changeValue(e.target.id);\n        break;\n    }\n    this.setState({changeStatus: !this.state.changeStatus});\n  };\n\n  cellStatusExp = (e) => {\n    let translate;\n    switch (e.target.innerText) {\n      case 'стена':\n        translate = 'wall';\n        break;\n      case 'кормушка':\n        translate = 'food';\n        break;\n      case 'ложная кормушка':\n        translate = 'fakeFood';\n        break;\n      case 'вход':\n        translate = 'entry';\n        break;\n      case 'выход':\n        translate = 'exit';\n        break;\n      case 'педаль':\n        translate = 'pedal';\n        break;\n      case 'Стартовая позиция':\n        translate = 'startPosition';\n        break;\n    }\n\n    const currentState = this.state;\n\n    for (let key in currentState) {\n      switch (key) {\n        case translate:\n          currentState[key] = !currentState[key];\n          break;\n        case 'wall':\n          currentState[key] = false;\n          break;\n        case 'food':\n          currentState[key] = false;\n          break;\n        case 'fakeFood':\n          currentState[key] = false;\n          break;\n        case 'entry':\n          currentState[key] = false;\n          break;\n        case 'exit':\n          currentState[key] = false;\n          break;\n        case 'pedal':\n          currentState[key] = false;\n          break;\n        case 'startPosition':\n          if (this.state.expBegin) {\n            currentState[key] = currentState[key];\n          } else {\n            currentState[key] = false;\n          }\n          break;\n      }\n    }\n    this.setState(currentState);\n  };\n\n  timer() {\n    this.setState({\n      timer: this.state.timer + 1,\n    });\n    if (!this.state.expBegin) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  startExp = () => {\n    let keyButton = this.props.keyboard;\n    this.setState({expBegin: true});\n    this.intervalId = setInterval(this.timer.bind(this), 1000);\n    let clickCount = 0;\n    const move = (e) => {\n      let timer = this.state.timer;\n\n      let singleClick = (value) => {\n        keyButton(value, timer);\n        if (value === '+') {\n          this.setState({feeding: this.state.feeding + 1});\n        }\n      };\n\n      let doubleClick = (value) => {\n        keyButton(value, timer);\n      };\n\n      const x = e.code;\n      if (this.state.expBegin) {\n        switch (x) {\n          case 'ArrowUp':\n            e.preventDefault();\n            this.props.moveUp(this.state.timer);\n            this.setState({expStatus: !this.state.moveStatus});\n            break;\n          case 'ArrowDown':\n            e.preventDefault();\n            this.props.moveDown(this.state.timer);\n            this.setState({expStatus: !this.state.moveStatus});\n            break;\n          case 'ArrowRight':\n            e.preventDefault();\n            this.props.moveRight(this.state.timer);\n            this.setState({expStatus: !this.state.moveStatus});\n            break;\n          case 'ArrowLeft':\n            e.preventDefault();\n            this.props.moveLeft(this.state.timer);\n            this.setState({expStatus: !this.state.moveStatus});\n            break;\n          case 'Numpad1':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('e');\n\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('x');\n            }\n            break;\n          case 'Numpad2':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('w');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('z');\n            }\n            break;\n          case 'Numpad3':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('r');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('m');\n            }\n            break;\n          case 'Numpad4':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('j');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('q');\n            }\n            break;\n          case 'Numpad5':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('|');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('b');\n            }\n            break;\n          case 'Numpad6':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('s');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('l');\n            }\n            break;\n          case 'Numpad7':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('t');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('?');\n            }\n            break;\n          case 'Numpad8':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('h');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('_');\n            }\n            break;\n          case 'Numpad9':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('o');\n              }, 300);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('i');\n            }\n            break;\n          case 'Backspace':\n            e.preventDefault();\n            this.props.deleteAction();\n            this.setState({expStatus: !this.state.moveStatus});\n\n            break;\n          case 'NumpadDivide':\n            e.preventDefault();\n            singleClick('/');\n            break;\n          case 'NumpadMultiply':\n            e.preventDefault();\n            singleClick('*');\n            break;\n          case 'NumpadSubtract':\n            e.preventDefault();\n            singleClick('-');\n            break;\n          case 'NumpadAdd':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('+');\n              }, 400);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('a');\n            }\n            break;\n          case 'Numpad0':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('y');\n              }, 400);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('d');\n            }\n            break;\n          case 'NumpadDecimal':\n            e.preventDefault();\n            clickCount++;\n            if (clickCount === 1) {\n              this.singleClickTimer = setTimeout(function() {\n                clickCount = 0;\n                singleClick('k');\n              }, 400);\n            } else if (clickCount === 2) {\n              clearTimeout(this.singleClickTimer);\n              clickCount = 0;\n              doubleClick('g');\n            }\n            break;\n        }\n      }\n    };\n    document.onkeydown = move;\n  };\n\n  finishExp = () => {\n    clearInterval(this.intervalId);\n    this.setState({expBegin: false});\n    this.props.saveExperiment(this.props.match.params.id,\n        this.state.expName,\n        this.props.expField.moves,\n        this.props.expField.name,\n        this.state.expNumber,\n        this.state.expAnimal,\n        this.state.type,\n        this.state.feeding);\n    this.setState({...initialState});\n    this.redirectNewExp();\n  };\n\n  redirectNewExp = async () => {\n    const response = await fetch(\n        '/index/getNewExpField',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id: this.props.match.params.id,\n            env: this.props.expField.name,\n          }),\n        },\n    );\n    const result = await response.json();\n    if (result.id) {\n      this.props.history.push(`/experiment/${result.id}`);\n      this.props.fullField(result.id);\n    }\n  };\n\n  newExpName = (e) => {\n    this.setState({expName: e.target.value});\n  };\n\n  setType = (e) => {\n    this.setState({type: e.target.value});\n    this.setState({\n      description: e.target.options[e.target.selectedIndex].getAttribute(\n          'description'),\n    });\n  };\n\n  mouseClickCount = 0;\n  clickAction = (e) => {\n    let singleValue;\n    let doubleValue;\n    if (e.target.className === 'keyBtn' || e.target.className ===\n        'keyWideBtn' || e.target.className === 'keyLongBtn') {\n      singleValue = e.target.firstElementChild.innerText;\n      doubleValue = e.target.lastElementChild.innerText;\n    } else if (e.target.className === 'left') {\n      singleValue = e.target.innerText;\n      doubleValue = e.target.nextElementSibling.innerText;\n    } else if (e.target.className === 'right') {\n      singleValue = e.target.previousElementSibling.innerText;\n      doubleValue = e.target.innerText;\n    } else if (e.target.className === 'keyBtnTop') {\n      singleValue = e.target.innerText;\n      doubleValue = e.target.innerText;\n    }\n\n    let singleClick = () => {\n      this.props.mouseAction(singleValue, this.state.timer);\n      if (singleValue === '+') {\n        this.setState({feeding: this.state.feeding + 1});\n      }\n    };\n\n    let doubleClick = () => {\n      this.props.mouseAction(doubleValue, this.state.timer);\n    };\n\n    this.mouseClickCount++;\n    if (this.state.expBegin) {\n      if (this.mouseClickCount === 1) {\n        this.singleMouseClickTimer = setTimeout(() => {\n          this.mouseClickCount = 0;\n          singleClick();\n        }, 400);\n      } else if (this.mouseClickCount === 2) {\n        clearTimeout(this.singleMouseClickTimer);\n        this.mouseClickCount = 0;\n        doubleClick();\n      }\n    }\n\n  };\n\n  endExp = async () => {\n    const response = await fetch(\n        '/index/endExp',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id: this.props.match.params.id,\n          }),\n        },\n    );\n    const result = await response.json();\n    if (result.answer === 'deleted') {\n      this.props.history.push('/')\n    }\n  };\n\n  render() {\n    return (\n        <div className='board unselectable'>\n          <div className={'expInputBox'}>\n            <div className={'expInputs'}>\n              {this.state.click && <div>{this.state.click}</div>}\n              <div className={'expInputTitle'}>Название\n                среды: {this.props.expField.name}</div>\n              <div className={'expInputTitle'}>\n                Тип эксперимента:\n                {this.state.response ?\n                    <select className={'expSelector'}\n                            onChange={this.setType}>\n                      <option/>\n                      {this.state.response.map((result, index) =>\n                          <option key={index}\n                                  description={result.description}>{result.name}</option>,\n                      )}\n                    </select>\n                    : null}\n              </div>\n              <div className={'expInputTitle'}>Название эксперимента:<input\n                  className={'expInput'}\n                  value={this.state.expName}\n                  onChange={this.newExpName}\n                  placeholder={'Введите название'}/></div>\n              <div className={'expInputTitle'}>Номер опыта:<input\n                  value={this.state.expNumber}\n                  onChange={this.newExpNumber} className={'expInput'}\n                  placeholder={'Введите номер'}/></div>\n              <div className={'expInputTitle'}>Имя особи:<input\n                  value={this.state.expAnimal}\n                  onChange={this.newExpAnimal} className={'expInput'}\n                  placeholder={'Введите имя'}/></div>\n            </div>\n            <div className={'expTypeDescription'}>{this.state.description}</div>\n          </div>\n          {this.state.expBegin ? <div className={'expProgress'}>Эксперимент в\n            процессе</div> : <div className={'expProgress'}></div>}\n\n          {this.state.hand === true ?\n              <div className={'expMainBox'}>\n\n\n                <div>\n                  {this.props.expField.field &&\n                  this.props.expField.field.line.map((element, i) => {\n                    return (\n                        <div key={`${element} ${i}`}>{element.line.map(\n                            component => {\n                              let action;\n                              switch (true) {\n                                case component.start:\n                                  action = 'start comp';\n                                  break;\n                                case component.wall:\n                                  action = 'wall comp';\n                                  break;\n                                case component.food:\n                                  action = 'food comp';\n                                  break;\n                                case component.fakeFood:\n                                  action = 'fakeFood comp';\n                                  break;\n                                case component.entry:\n                                  action = 'entry comp';\n                                  break;\n                                case component.exit:\n                                  action = 'exit comp';\n                                  break;\n                                case component.pedal:\n                                  action = 'pedal comp';\n                                  break;\n                                default:\n                                  action = 'comp';\n                                  break;\n                              }\n                              return (\n                                  <span key={component.index}\n                                        id={component.index}\n                                        className={action}\n                                        onClick={this.action}\n                                  >\n                        {component.value\n                            ?\n                            <span\n                                className={'ValueBtn'}>{component.value}</span>\n                            :\n                            component.index}\n                      </span>\n                              );\n                            })}\n                        </div>\n                    );\n                  })}\n                </div>\n\n\n                <div>\n                  <div>\n                    <div className={'expTimer'}>\n                      <div>Таймер:</div>\n                      <div className={'expTimerInt'}>{this.state.timer}</div>\n                      <div>сек.</div>\n                    </div>\n                    <div className={'expTimer'}>Подкреплений: <div\n                        className={'expTimerInt'}>{this.state.feeding}</div></div>\n                  </div>\n                  <Keyboard click={this.clickAction}/>\n                  <div className={'expStatusBtnsContainer'}>\n                    <StatusButtons class={'expStatusBtnsBox'}\n                                   btnClass={'expButton'} wall={this.state.wall}\n                                   food={this.state.food}\n                                   fakeFood={this.state.fakeFood}\n                                   entry={this.state.entry} exit={this.state.exit}\n                                   pedal={this.state.pedal}\n                                   cellStatus={this.cellStatusExp}/>\n                  </div>\n                  <div className={'startBtnsRow'}>\n                    <div>\n                      <button className={'expStartButton'}\n                              onClick={this.cellStatusExp}>Стартовая позиция\n                      </button>\n                    </div>\n                    <div>\n                      {this.state.expBegin ?\n                          <button className={'expStartButton'}\n                                  onClick={this.finishExp}>Завершить\n                            эксперимент</button> :\n                          <button className={'expStartButton'}\n                                  onClick={this.startExp}>Начать\n                            эксперимент</button>}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              :\n                <div className={'expMainBox'}>\n\n                  <div>\n                    <div>\n                      <div className={'expTimer'}>\n                        <div>Таймер:</div>\n                        <div className={'expTimerInt'}>{this.state.timer}</div>\n                        <div>сек.</div>\n                      </div>\n                      <div className={'expTimer'}>Подкреплений: <div\n                          className={'expTimerInt'}>{this.state.feeding}</div></div>\n                    </div>\n                    <Keyboard click={this.clickAction}/>\n                    <div className={'expStatusBtnsContainer'}>\n                      <StatusButtons class={'expStatusBtnsBox'}\n                                     btnClass={'expButton'} wall={this.state.wall}\n                                     food={this.state.food}\n                                     fakeFood={this.state.fakeFood}\n                                     entry={this.state.entry} exit={this.state.exit}\n                                     pedal={this.state.pedal}\n                                     cellStatus={this.cellStatusExp}/>\n                    </div>\n                    <div className={'startBtnsRow'}>\n                      <div>\n                        <button className={'expStartButton'}\n                                onClick={this.cellStatusExp}>Стартовая позиция\n                        </button>\n                      </div>\n                      <div>\n                        {this.state.expBegin ?\n                            <button className={'expStartButton'}\n                                    onClick={this.finishExp}>Завершить\n                              эксперимент</button> :\n                            <button className={'expStartButton'}\n                                    onClick={this.startExp}>Начать\n                              эксперимент</button>}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    {this.props.expField.field &&\n                    this.props.expField.field.line.map((element, i) => {\n                      return (\n                          <div key={`${element} ${i}`}>{element.line.map(\n                              component => {\n                                let action;\n                                switch (true) {\n                                  case component.start:\n                                    action = 'start comp';\n                                    break;\n                                  case component.wall:\n                                    action = 'wall comp';\n                                    break;\n                                  case component.food:\n                                    action = 'food comp';\n                                    break;\n                                  case component.fakeFood:\n                                    action = 'fakeFood comp';\n                                    break;\n                                  case component.entry:\n                                    action = 'entry comp';\n                                    break;\n                                  case component.exit:\n                                    action = 'exit comp';\n                                    break;\n                                  case component.pedal:\n                                    action = 'pedal comp';\n                                    break;\n                                  default:\n                                    action = 'comp';\n                                    break;\n                                }\n                                return (\n                                    <span key={component.index}\n                                          id={component.index}\n                                          className={action}\n                                          onClick={this.action}\n                                    >\n                        {component.value\n                            ?\n                            <span\n                                className={'ValueBtn'}>{component.value}</span>\n                            :\n                            component.index}\n                      </span>\n                                );\n                              })}\n                          </div>\n                      );\n                    })}\n                  </div>\n\n\n\n                </div>\n          }\n\n\n          <div className={'expResultInput'}>{this.props.expField.moves &&\n          this.props.expField.moves.map((element, i) => {\n            for (let key in element) {\n              return <span key={i}>{element[key]}</span>;\n            }\n          })}</div>\n          <button className={'exitBtn'} onClick={this.endExp}>Выйти из эксперимента</button>\n          <button className={'exitBtn'} onClick={this.changeHand}>Изменить расположение</button>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    expField: state.expField.expField,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fullField: (id) => {\n      dispatch(expField(id));\n    },\n    newComp: (index, newComp) => {\n      dispatch(CHANGECOMP(index, newComp));\n    },\n    newValue: (value, newValue) => {\n      dispatch(NEWVALUE(value, newValue));\n    },\n    startPos: (index) => {\n      dispatch(STARTPOS(index));\n    },\n    moveUp: (timer) => {\n      dispatch(MOVEUP(timer));\n    },\n    moveDown: (timer) => {\n      dispatch(MOVEDOWN(timer));\n    },\n    moveRight: (timer) => {\n      dispatch(MOVERIGHT(timer));\n    },\n    moveLeft: (timer) => {\n      dispatch(MOVELEFT(timer));\n    },\n    saveExperiment: (\n        id, expName, moves, envName, expNumber, expAnimal, expType,\n        expFeeding) => {\n      dispatch(\n          saveExp(id, expName, moves, envName, expNumber, expAnimal, expType,\n              expFeeding));\n    },\n    keyboard: (value, time) => {\n      dispatch(KEYBOARDACTION(value, time));\n    },\n    deleteAction: () => {\n      dispatch(DELETEACTION());\n    },\n    mouseAction: (value, time) => {\n      dispatch(MOUSEACTION(value, time));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Experiment);\n","import React, {Component} from 'react';\r\nimport './CurrentType.css';\r\n\r\nconst Cookies = require('js-cookie');\r\n\r\nclass CurrentType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.id,\r\n      name: this.props.name,\r\n      description: this.props.description,\r\n      edit: false,\r\n      saved: null,\r\n    };\r\n  }\r\n\r\n  editMode = () => {\r\n    this.setState({edit: !this.state.edit, saved: null});\r\n    this.setState(this.props);\r\n  };\r\n\r\n  changeName = (e) => {\r\n    this.setState({name: e.target.value.toUpperCase()});\r\n  };\r\n\r\n  changeDescription = (e) => {\r\n    this.setState({description: e.target.value});\r\n  };\r\n\r\n  save = async () => {\r\n    try {\r\n      const {id, name, description} = this.state;\r\n      const resp = await fetch('/types/edit', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({id, name, description}),\r\n      });\r\n      const res = await resp.json();\r\n      if (res.succeeded) {\r\n        this.setState({saved: true});\r\n        this.setState({edit: false});\r\n      } else {\r\n        this.setState({saved: false});\r\n        this.setState(this.props);\r\n      }\r\n    } catch (e) {\r\n      this.setState({saved: false});\r\n      this.setState(this.props);\r\n    }\r\n  };\r\n\r\n  delete = async (e) => {\r\n    const id = this.state.id;\r\n    let resp = await fetch('/types/delete', {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({id}),\r\n    });\r\n    const res = await resp.json();\r\n    this.setState({loading: true});\r\n    if (res.succeed) {\r\n      this.setState({loading: false});\r\n      this.props.fetch();\r\n    } else {\r\n      this.setState({loading: false});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className={'curResult'} name={this.state.id}>\r\n          {Cookies.get('category') === 'Преподаватель' ?\r\n              this.state.edit ?\r\n                  <div className={'curTeacherResultBox'}>\r\n                    <div className={'curTypeName'}>\r\n                      <input className={'typeCurInput'} name=\"name\"\r\n                             placeholder=\"название\"\r\n                             value={this.state.name}\r\n                             maxLength=\"3\"\r\n                             onChange={this.changeName}\r\n                      />\r\n                    </div>\r\n                    <div className={'curTypeDescription'}>\r\n                      <textarea className={'typeCurInput'}\r\n                             name=\"description\"\r\n                             placeholder=\"описание\"\r\n                             value={this.state.description}\r\n                             onChange={this.changeDescription}\r\n                      />\r\n                    </div>\r\n                    <div className={'typeCurButton'}\r\n                         onClick={this.save}>Сохранить\r\n                    </div>\r\n                    <div className={'typeCurButton'}\r\n                         onClick={this.editMode}>Отменить\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  <div className={'curTeacherResultBox'}>\r\n                    <div\r\n                        className={'curTypeName'}>{this.state.name}\r\n                    </div>\r\n                    <div\r\n                        className={'curTypeDescription'}>{this.state.description}\r\n                    </div>\r\n                    <div className={'typeCurButton'}\r\n                         onClick={this.editMode}>Редактировать\r\n                    </div>\r\n                    <div className={'typeCurButton'}\r\n                         onClick={this.delete}>Удалить\r\n                    </div>\r\n                  </div>\r\n              :\r\n              <div className={'curStudentResultBox'}>\r\n                <div className={'curTypeName'}>{this.state.name}\r\n                </div>\r\n                <div\r\n                    className={'curTypeStudentDescription'}>{this.state.description}\r\n                </div>\r\n              </div>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentType;\r\n","import React, {Component} from 'react';\nimport './Types.css';\nimport CurrentType from '../Types/CurrentType/CurrentType';\nconst Cookies = require('js-cookie');\n\nclass Types extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      sending: false,\n      saved: null,\n      failed: false,\n      response: null,\n      loading: false,\n    };\n  }\n\n  fetchTypes = async () => {\n    this.setState({response: null});\n    let resp = await fetch('/types', {\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'},\n    });\n    const res = await resp.json();\n    this.setState({loading: true});\n    if (res.response) {\n      this.setState({loading: false, error: false, response: res.response});\n    } else {\n      this.setState({loading: false, error: true});\n    }\n  };\n\n  componentDidMount = async () => {\n    await this.fetchTypes();\n  };\n\n  save = async () => {\n    this.setState({sending: false, saved: null, failed: false});\n    const {name, description} = this.state;\n    let resp = await fetch('/types/create', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({name, description}),\n    });\n    const res = await resp.json();\n    this.setState({sending: true});\n    if (res.succeeded) {\n      this.setState({\n        sending: false,\n        saved: true,\n        name: '',\n        description: '',\n      });\n      this.fetchTypes();\n    } else {\n      this.setState({sending: false, failed: true});\n    }\n  };\n\n  changeName = (e) => {\n    this.setState({name: e.target.value.toUpperCase()});\n  };\n\n  changeDescription = (e) => {\n    this.setState({description: e.target.value});\n  };\n\n  render() {\n    return (\n      <div className={'typeContainer'}>\n        <h1>Типы экспериментов</h1>\n        {Cookies.get('category') === 'Преподаватель' ?\n            <div>\n              <h2>Создать новый</h2>\n              <div className={'typeInputBox'}>\n                <input className={'typeNameInput'}\n                       name=\"name\"\n                       value={this.state.name}\n                       placeholder=\"ИМЯ\"\n                       maxLength=\"3\"\n                       onChange={this.changeName}\n                />\n                <textarea className={'typeDescriptionInput'}\n                       name=\"description\"\n                       value={this.state.description}\n                       onChange={this.changeDescription}/>\n              </div>\n              <div className={'typeSaveButton'}\n                   onClick={this.save}>сохранить\n              </div>\n              <hr/>\n            </div> : null\n        }\n        {this.state.response ?\n            <div>\n              <h2>Все типы экспериментов</h2>\n                <div>\n                  <div className={'typeTable'}>\n                    <div className={'typeTableHead'}>\n                      <div className={'typeName'}>Имя</div>\n                      <div className={'typeDescription'}>Описание</div>\n                      {/*{Cookies.get('category') === 'Преподаватель' ?*/}\n                    </div>\n                    {this.state.response.map((result, index) =>\n                        <CurrentType\n                        key={index}\n                        id={result._id}\n                        name={result.name}\n                        description={result.description}\n                        fetch={this.fetchTypes}\n                        />,\n                    )}\n                  </div>\n              </div>\n            </div> :\n            <div>\n              <h2>Нет записей</h2>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Types;\n","import React, {Component} from 'react';\nimport classes from './Webcam.module.css';\nimport Webcam from 'react-webcam';\n\nclass Video extends Component {\n  render() {\n    const videoConstraints = {\n      facingMode: 'user',\n    };\n    \n    return <Webcam className={classes.Webcam} videoConstraints={videoConstraints}/>;\n  }\n}\n\nexport default Video;\n","import React, {Component} from 'react';\nimport classes from './EnvironmentList.module.css';\nconst Cookies = require('js-cookie');\n\n\nclass EnvironmentList extends Component {\n  render() {\n    return (\n      <div className={classes.EnvironmentList}>\n        <div className={classes.title}>{this.props.name}</div>\n\n        <div\n          className={classes.menu}\n          onClick={this.props.onStartEx.bind(this,\n            {id: this.props._id, name:this.props.name, field: this.props.field})}>Начать\n          эксперимент\n        </div>\n        {Cookies.get('category') === 'Преподаватель' ?\n        <div\n          className={classes.menu}\n          onClick={this.props.onDelete.bind(this, this.props._id)}>Удалить\n        </div> : null}\n      </div>\n    );\n  }\n}\n\nexport default EnvironmentList;\n","import React, {Component} from 'react';\nimport classes from './Environment.module.css';\nimport Loader from '../../containers/Loader/Loader';\nimport EnvironmentList from './EnvironmentList/EnvironmentList';\n\nclass Environment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: '',\n    };\n  }\n\n  componentDidMount = async () => {\n    const response = await fetch('/environment');\n    const results = await response.json();\n    this.setState({\n      results,\n    });\n  };\n\n  onStartEx = async (props) => {\n    const response = await fetch(\n      '/index/startExp',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: props.name,\n          field: props.field,\n          archive: true\n        }),\n      },\n    );\n    const result = await response.json();\n    this.props.history.push(`/experiment/${result.id}`);\n\n  };\n\n  onDelete = async id => {\n    const response = await fetch('/environment', {\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id}),\n    });\n    const results = await response.json();\n    this.setState({\n      results,\n    });\n  };\n\n  render() {\n    return (\n      !this.state.results ?\n        <Loader/> :\n        (<div className={classes.Environment}>\n          <h1>Архив сред</h1>\n          {this.state.results.map((elem, index) =>\n            <EnvironmentList {...elem} key={index} onDelete={this.onDelete}\n                             onStartEx={this.onStartEx}/>,\n          )}\n        </div>)\n    );\n  }\n}\n\nexport default Environment;\n","import React, {Component} from 'react';\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom';\nimport Layout from './Layout/Layout';\nimport SignIn from './components/SignIn/SignIn';\nimport Mainpage from './containers/mainpage/mainpage';\nimport Navbar from './containers/Navbar/Navbar';\nimport SignUp from './components/SignUp/SignUp';\nimport Field from './components/Field/Field';\nimport UserList from './components/UserList/UserList';\nimport Documentation from './components/Documentation/Documentation';\nimport Results from './components/Results/Results';\nimport ResultDetail from './components/Results/ResultDetail/ResultDetail';\nimport Loader from './containers/Loader/Loader';\nimport Experiment from './components/Experiment/Experiment';\nimport Types from './components/Types/Types';\nimport Video from './components/Webcam/Webcam';\n\nimport {connect} from 'react-redux'\nimport Environment from './components/Environment/Environment';\n// const Cookies = require('js-cookie');\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      user: '',\n      logged_in: false,\n      loading: false,\n    };\n  }\n\n  handler = () => {\n    this.setState({logged_in: true, loading: false});\n  };\n\n  logout = () => {\n    this.setState({logged_in: false, loading: false});\n  };\n  \n  componentDidMount = async () => {\n    this.setState({loading: true});\n    const response = await fetch('/users');\n    const result = await response.json();\n    if (result.user) {\n      this.setState({user: result.user, loading: false, logged_in: true});\n    } else {\n      this.setState({loading: false, logged_in: false})\n    }\n  };\n\n  /*componentDidUpdate = async () => { // TODO: море фетчей\n    const response = await fetch('/users');\n    const result = await response.json();\n    this.setState({user: result.user, loading: false});\n  };*/\n\n  render() {\n    return (this.state.loading === true) ? (<Layout>\n        <Loader/>\n      </Layout>) :\n      (this.state.logged_in === false) ? (<Layout>\n          <div><Route path={'/'} render={(props) => {\n            return (\n                <div>\n                  <SignIn {...props} handler={this.handler}/>\n                </div>\n            );\n          }}/></div>\n        </Layout>) :\n        (<Layout>\n            <Router>\n              <div>\n                <Route render={(props) => {\n                  return (\n                    <div>\n                      <Route render={(props) => {\n                        return (\n                            <div>\n                              <Navbar {...props} logout={this.logout} options={this.state.user.user}/>\n                            </div>\n                        );\n                      }}/>\n                      <Switch>\n                        <Route path={'/types'} component={Types}/>\n                        <Route path={'/registration'} component={SignUp}/>\n                        <Route path={'/constructor'} render={\n                          (props)=>{\n                            return (\n                                <div>\n                                  <Field {...props} />\n                                </div>\n                            )\n                          }\n                        } />\n                        <Route path={'/experiment/:id'} render={\n                          (props)=>{\n                            return (\n                                <div>\n                                  <Experiment {...props} />\n                                </div>\n                            )\n                          }\n                        } />\n                        <Route exact path={'/results'} render={(props) => {\n                          return (\n                            <div>\n                              <Results {...props} options={this.state.user.user}/>\n                            </div>\n                          );\n                        }}/>\n\n                        <Route path={'/results/:id'} component={ResultDetail}/>\n                        <Route path={'/users'} component={UserList}/>\n                        <Route path={'/readme'} component={Documentation}/>\n                        <Route path={'/webcam'} component={Video}/>\n                        <Route path={'/environment'} component={Environment}/>\n  \n                        <Route exact path={'/'} render={(props) => {\n                          return (\n                              <div>\n                                <Mainpage {...props} options={this.state.user.user}/>\n                              </div>\n                          );\n                        }}/>\n                      </Switch>\n                    </div>\n                  );\n                }}/>\n              </div>\n            </Router>\n          </Layout>\n        );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    token: store.token\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n// module.exports = Cookies;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {AUTH_SUCCESS, AUTH_LOGOUT} from '../actions/actions';\n\nconst initialState = {\n  token: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state, token: action.token,\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state, token: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_VALUE,\n  CHANGE_VALUE,\n  FULL_FIELD,\n} from '../actions/actions';\n\nconst initialState = {\n  field: [],\n};\n\nexport default function fieldReducer(state = initialState, action) {\n  switch (action.type) {\n    case FULL_FIELD:\n      return {\n        field: action.field,\n      };\n    case ADD_VALUE:\n      const newField = state.field.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n\n            if (elem.index === action.index) {\n\n              for (let key in elem) {\n                if (key === action.change) {\n                  elem[key] = !elem[key];\n                } else if (key === 'index' || key === 'value') {\n                  elem[key] = elem[key];\n                } else {\n                  elem[key] = false;\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      return {\n        field: newField,\n      };\n\n    case CHANGE_VALUE:\n      const newValue = state.field.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === action.index) {\n\n              for (let key in elem) {\n                if (key === 'value') {\n                  elem[key] = action.changedValue;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      return {\n        field: newValue,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CHANGE_COMP,\n  DELETE_ACTION,\n  EXP_FIELD,\n  KEYBOARD_ACTION,\n  MOVE_DOWN,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_UP,\n  NEW_VALUE,\n  START_POS,\n  MOUSE_ACTION\n} from '../actions/actions';\n\nconst initialState = {\n  expField: {},\n  moves: [],\n};\n\nexport default function expReducer(state = initialState, action) {\n  switch (action.type) {\n    case EXP_FIELD:\n      return {\n        expField: action.field,\n      };\n\n    case CHANGE_COMP:\n      const newExpField = state.expField;\n      const newLine = newExpField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n\n            if (elem.index === action.index) {\n\n              for (let key in elem) {\n                if (key === action.newComp) {\n                  elem[key] = !elem[key];\n                } else if (key === 'index' || key === 'value') {\n                  elem[key] = elem[key];\n                } else {\n                  elem[key] = false;\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      newExpField.field.line = newLine;\n\n      return {\n        expField: newExpField,\n      };\n\n    case NEW_VALUE:\n      const field = state.expField;\n      const newValue = state.expField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === action.index) {\n\n              for (let key in elem) {\n                if (key === 'value') {\n                  elem[key] = action.newValue;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      field.field.line = newValue;\n      return {\n        expField: field,\n      };\n\n    case START_POS:\n      const stateField = state.expField;\n      const startPos = stateField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.start === true && elem.index !== action.index) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = !elem[key];\n                } else if (key === 'index' || key === 'value') {\n                  elem[key] = elem[key];\n                } else {\n                  elem[key] = false;\n                }\n              }\n              return elem;\n\n            } else if (elem.index === action.index) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = !elem[key];\n                } else if (key === 'index' || key === 'value') {\n                  elem[key] = elem[key];\n                } else {\n                  elem[key] = false;\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      stateField.field.line = startPos;\n      return {\n        expField: stateField,\n      };\n\n    case MOVE_UP:\n      const currentSec = action.time;\n      const expUpField = state.expField;\n      let prevMovesUp = expUpField.moves;\n      let prevIndex;\n      let newIndex;\n      let walls = [];\n      let entry = [];\n      expUpField.field.line.map((comp) => {\n        line: comp.line.map(elem => {\n          if (elem.wall) {\n            walls.push(elem.index);\n          } else if (elem.entry) {\n            entry.push(elem.index);\n          }\n        });\n      });\n\n      expUpField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n\n            if (elem.start === true) {\n              let newIndexArray = elem.index.split('');\n              let letter = newIndexArray[0];\n              newIndexArray.splice(0, 1);\n              let prevIndexNum = Number(newIndexArray.join(''));\n              let newIndexNum = Number(newIndexArray.join('')) - 1;\n              if (newIndexNum === 0 ||\n                  walls.indexOf(`${letter}${newIndexNum}`) !== -1 ||\n                  entry.indexOf(`${letter}${newIndexNum}`) !== -1) {\n\n                newIndex = `${letter}${prevIndexNum}`;\n              } else {\n                newIndex = `${letter}${newIndexNum}`;\n              }\n              prevIndex = `${letter}${prevIndexNum}`;\n            }\n          }),\n        };\n      });\n\n      const moveUp = state.expField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === newIndex) {\n              if (elem.value && prevMovesUp && prevIndex !== newIndex) {\n                let obj = {};\n                obj[currentSec] = elem.value;\n                prevMovesUp.push(obj);\n              } else if (elem.value && !prevMovesUp && prevIndex !== newIndex) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesUp = [obj];\n              }\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = true;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n\n            } else if (elem.index === prevIndex) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = false;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      expUpField.field.line = moveUp;\n      expUpField.moves = prevMovesUp;\n      return {\n        expField: expUpField,\n      };\n\n    case MOVE_DOWN:\n      const expDownField = state.expField;\n      let prevMovesDown = expDownField.moves;\n      let prevIndexDown;\n      let newIndexDown;\n      let wallsDown = [];\n      let exit = [];\n      expDownField.field.line.map((comp) => {\n        line: comp.line.map(elem => {\n          if (elem.wall) {\n            wallsDown.push(elem.index);\n          } else if (elem.exit) {\n            exit.push(elem.index);\n          }\n        });\n      });\n      expDownField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.start === true) {\n              let newIndexArray = elem.index.split('');\n              let letter = newIndexArray[0];\n              newIndexArray.splice(0, 1);\n              let prevIndexNum = Number(newIndexArray.join(''));\n              let newIndexNum = Number(newIndexArray.join('')) + 1;\n\n              if (newIndexNum > 11 ||\n                  wallsDown.indexOf(`${letter}${newIndexNum}`) !== -1 ||\n                  exit.indexOf(`${letter}${newIndexNum}`) !== -1) {\n                newIndexDown = `${letter}${prevIndexNum}`;\n              } else {\n                newIndexDown = `${letter}${newIndexNum}`;\n              }\n              prevIndexDown = `${letter}${prevIndexNum}`;\n            }\n          }),\n        };\n      });\n\n      const moveDown = state.expField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === newIndexDown) {\n              if (elem.value && prevMovesDown && prevIndexDown !==\n                  newIndexDown) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesDown.push(obj);\n              } else if (elem.value && !prevMovesDown && prevIndexDown !==\n                  newIndexDown) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesDown = [obj];\n              }\n\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = true;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n\n            } else if (elem.index === prevIndexDown) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = false;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      expDownField.field.line = moveDown;\n      expDownField.moves = prevMovesDown;\n      return {\n        expField: expDownField,\n      };\n\n    case MOVE_RIGHT:\n      const expRightField = state.expField;\n      let prevMovesRight = expRightField.moves;\n\n      let prevLetRight;\n      let newLetRight;\n      let wallsRight = [];\n      expRightField.field.line.map((comp) => {\n        line: comp.line.map(elem => {\n          if (elem.wall) {\n            wallsRight.push(elem.index);\n          }\n        });\n      });\n      expRightField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.start === true) {\n              let newIndexArray = elem.index.split('');\n              let prevLetter = newIndexArray[0];\n              let newLet = String.fromCharCode(prevLetter.charCodeAt(0) + 1);\n              newIndexArray.splice(0, 1);\n              let number = newIndexArray.join('');\n              prevLetRight = elem.index;\n\n              if (prevLetter === 'k' ||\n                  wallsRight.indexOf(`${newLet}${number}`) !== -1) {\n                newLetRight = elem.index;\n              } else {\n                newLetRight = `${newLet}${number}`;\n              }\n\n            }\n          }),\n        };\n      });\n\n      const moveRight = state.expField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === newLetRight) {\n              if (elem.value && prevMovesRight && prevLetRight !==\n                  newLetRight) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesRight.push(obj);\n              } else if (elem.value && !prevMovesRight && prevLetRight !==\n                  newLetRight) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesRight = [obj];\n              }\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = true;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n\n            } else if (elem.index === prevLetRight) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = false;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      expRightField.field.line = moveRight;\n      expRightField.moves = prevMovesRight;\n\n      return {\n        expField: expRightField,\n      };\n\n    case MOVE_LEFT:\n      const expLeftField = state.expField;\n      let prevMovesLeft = state.expField.moves;\n      let prevLetLeft;\n      let newLetLeft;\n      let wallsLeft = [];\n      expLeftField.field.line.map((comp) => {\n        line: comp.line.map(elem => {\n          if (elem.wall) {\n            wallsLeft.push(elem.index);\n          }\n        });\n      });\n      expLeftField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.start === true) {\n              let newIndexArray = elem.index.split('');\n              let prevLetter = newIndexArray[0];\n              let newLet = String.fromCharCode(prevLetter.charCodeAt(0) - 1);\n              newIndexArray.splice(0, 1);\n              let number = newIndexArray.join('');\n              prevLetLeft = elem.index;\n\n              if (prevLetter === 'a' ||\n                  wallsLeft.indexOf(`${newLet}${number}`) !== -1) {\n                newLetLeft = elem.index;\n              } else {\n                newLetLeft = `${newLet}${number}`;\n              }\n            }\n          }),\n        };\n      });\n\n      const moveLeft = state.expField.field.line.map((comp) => {\n        return {\n          line: comp.line.map(elem => {\n            if (elem.index === newLetLeft) {\n              if (elem.value && prevMovesLeft && prevLetLeft !== newLetLeft) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesLeft.push(obj);\n              } else if (elem.value && !prevMovesLeft && prevLetLeft !==\n                  newLetLeft) {\n                let obj = {};\n                obj[action.time] = elem.value;\n                prevMovesLeft = [obj];\n              }\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = true;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n\n            } else if (elem.index === prevLetLeft) {\n              for (let key in elem) {\n                if (key === 'start') {\n                  elem[key] = false;\n                } else {\n                  elem[key] = elem[key];\n                }\n              }\n              return elem;\n            } else {\n              return elem;\n            }\n          }),\n        };\n      });\n      expLeftField.field.line = moveLeft;\n      expLeftField.moves = prevMovesLeft;\n      return {\n        expField: expLeftField,\n      };\n\n    case KEYBOARD_ACTION:\n      const expKeyField = state.expField;\n      let prevMovesKey = state.expField.moves;\n      if (prevMovesKey) {\n        let obj = {};\n        obj[action.time] = action.value;\n        prevMovesKey.push(obj);\n      } else if (!prevMovesKey) {\n        let obj = {};\n        obj[action.time] = action.value;\n        prevMovesKey = [obj];\n      }\n      expKeyField.moves = prevMovesKey;\n      return {\n        expField: expKeyField\n      };\n\n    case DELETE_ACTION:\n      const expDeleteKeyField = state.expField;\n      let prevMovesDelete = state.expField.moves;\n\n      if (prevMovesDelete) {\n        prevMovesDelete.pop();\n      }\n      expDeleteKeyField.moves = prevMovesDelete;\n      return {\n        expField: expDeleteKeyField\n      };\n\n    case MOUSE_ACTION:\n      const expMouseField = state.expField;\n      let prevMovesMouse = state.expField.moves;\n\n      if (prevMovesMouse) {\n        let obj = {};\n        obj[action.time] = action.value;\n        prevMovesMouse.push(obj);\n      } else if (!prevMovesMouse) {\n        let obj = {};\n        obj[action.time] = action.value;\n        prevMovesMouse = [obj];\n      }\n\n      expMouseField.moves = prevMovesMouse;\n      return {\n        expField: expMouseField\n      };\n\n    default:\n      return state;\n  }\n\n}\n\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport fieldReducer from './fieldReducer'\nimport expReducer from './expReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  field: fieldReducer,\n  expField: expReducer\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/RootReducer';\n\nconst composeEnhancers = typeof window === 'object' &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(\n        applyMiddleware(thunk),\n    ),\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}